/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (2.1.003). Sun Aug  4 09:26:32 2013
package OptimizationTests.regression.test128541;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 30;

    public static long q_check_sum = 0;

    public static void q(int ej, long y, long j3, int ci) {

        int v6 = 16618, i = 25155, ip = 64425, ksl = 58243, ozh = -62219, z1 = 35233, ni = -18276, jak = 7443, vpf = -49037, u = -44717, k = 44712, p9 = 28142, f2 = -20474, ks = 58952, r[] = new int[N], jj[] = new int[N], q5p[][] = new int[N][N], vb[] = new int[N], mr[] = new int[N], qc4[][] = new int[N][N], nr[] = new int[N], tkd[] = new int[N];
        short f[][] = new short[N][N];
        long v = -8232193829710063388L, p[] = new long[N], wwn[] = new long[N];

        init(r, 41502);
        init(jj, -23449);
        init(q5p, 6826);
        init(vb, -41680);
        init(mr, -20437);
        init(f, (short) -22182);
        init(qc4, -3751);
        init(p, 4246198757052252227L);
        init(wwn, -898621054542493487L);
        init(nr, 13697);
        init(tkd, 14376);

        try {
            for (v6 = 3; v6 > 1; v6--) {
                j3 -= (long) (r[v6]);
                v *= (long) ((i++) - (r[v6]));
            }
            try {
                for (ip = 3; ip > 1; ip--) {
                    j3 -= (long) (r[ip - 1]);
                }
                r[32] = (int) j3;
                for (ksl = 2; ksl > 1; ksl--) {
                    ozh += (int) (z1--);
                }
                q_check_sum += ej + y + j3 + ci + v6 + v + i + ip + ksl + ozh
                        + z1 + checkSum(r);
                return;
            } catch (ArrayIndexOutOfBoundsException xsm) {
                for (ni = 17; ni > 1; --ni) {
                    j3 -= (long) (q5p[ni - 1][ni]);
                }
                for (jak = 18; jak > 1; jak--) {
                    if (y > 0) {
                        q_check_sum += ej + y + j3 + ci + v6 + v + i + ip + ksl
                                + ozh + z1 + ni + jak + checkSum(r)
                                + checkSum(jj) + checkSum(q5p);
                        return;
                    }
                }
            } finally {
                for (vpf = 1; vpf < 27; ++vpf) {
                    u = (int) (y + (vpf - (vb[vpf])));
                }
                for (p9 = 1; p9 < 20; ++p9) {
                    f[p9 + 1][p9 + 1] -= (short) ((qc4[p9][p9]) + (-(p[p9 - 1])));
                }
            }
        } catch (NullPointerException bo) {
            for (f2 = 24; f2 > 1; f2--) {
                k = (int) ((y) * (q5p[f2 - 1][f2]));
            }
            for (ks = 6; ks > 1; ks--) {
                nr[ks - 1] += (int) (tkd[ks - 1]);
            }
        }

        q_check_sum += ej + y + j3 + ci + v6 + v + i + ip + ksl + ozh + z1 + ni
                + jak + vpf + u + k + p9 + f2 + ks + checkSum(r) + checkSum(jj)
                + checkSum(q5p) + checkSum(vb) + checkSum(mr) + checkSum(f)
                + checkSum(qc4) + checkSum(p) + checkSum(wwn) + checkSum(nr)
                + checkSum(tkd);
    }

    public static void main(String[] g2o) {

        int r4 = 63623, i = 26871, s = -18020, w = 63729, b0 = -8294, j = -5558, ovz[] = new int[N], v0[][] = new int[N][N], r[][] = new int[N][N], hn[] = new int[N], o3[] = new int[N], pxi[] = new int[N];

        init(v0, 7078);
        init(hn, -44501);
        init(o3, 29427);
        init(pxi, -22594);

        for (r4 = 25; r4 > 1; --r4) {
            for (i = 1; i < r4; ++i) {
                q((int) ((hn[r4]) + (hn[r4 + 1])), (long) (s - (o3[r4 - 1])),
                        (long) (pxi[i - 1]), (int) (v0[i][i - 1]));
            }
        }

        System.out.println("q_check_sum: " + q_check_sum);
    }
}
