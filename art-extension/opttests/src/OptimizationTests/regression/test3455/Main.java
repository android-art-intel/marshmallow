/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Android Runtime Fuzzer tool (4.1.002). Fri Mar  4 09:48:13 2016
// srand = 154904910669474148149507119604426282762

package OptimizationTests.regression.test3455;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=-4L;
    public static int iFld=-52957;

public static void main(String[] strArr) {

    int i=62509, i1=-77, i2=-4, iArr[]=new int[N];
    float f=0.712F;
    double d=-2.20021;
    short sArr[]=new short[N];

    init(iArr, -16004);
    init(sArr, (short)-16969);

    i = 1;
    while (++i < 93) {
        i1 = 1;
        do {
            iArr[i1 + 1] += (int)Main.instanceCount;
            f -= (f--);
            Main.instanceCount = (--iArr[i1]);
            f = (((i + i) * i1) - (-(Main.iFld++)));
        } while (++i1 < 82);
        for (i2 = 1; i2 < i; ++i2) {
            byte by=-42;
            double d1=14.24164;
            by += (byte)(i2 | i);
            Main.iFld = (int)((--Main.instanceCount) & ((Main.iFld++) - (-23944 - (i1 * Main.instanceCount))));
            for (d = 5; d < 91; d++) {
                iArr[(int)(d + 1)] -= i;
                Main.iFld = (int)(sArr[(int)(d)] - (-41550L + iArr[i]));
                Main.iFld <<= (int)Main.instanceCount;
            }
            Main.iFld = (int)((Main.instanceCount + (f -= i1)) - ((++d1) - (Main.iFld - -154L)));
            Main.instanceCount += (2 - (i1 + (Main.iFld - i)));
            Main.iFld += (int)(4L + (i2 * i2));
        }
        Main.iFld -= (i1 - ((i - i2) * (Main.iFld *= i)));
    }

    System.out.println("i i1 f = " + i + "," + i1 + "," + Float.floatToIntBits(f));
    System.out.println("i2 d iArr = " + i2 + "," + Double.doubleToLongBits(d) + "," + checkSum(iArr));
    System.out.println("sArr = " + checkSum(sArr));

    System.out.println("Main.instanceCount Main.iFld = " + Main.instanceCount + "," + Main.iFld);
}
}
