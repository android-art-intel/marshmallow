/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Android Runtime Fuzzer tool (4.1.002). Sat Apr  2 15:16:02 2016
// srand = 209678456406774113185868387402997832803

package OptimizationTests.regression.test3734;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=6L;
    public static int iArrFld[]=new int[N];

    static {
        init(Main.iArrFld, 48651);
    }

public static void main(String[] strArr) {

    int i=-51569, i1=-51397, i2=35725, i3=-10, i4=-12;
    long l=76L, lArr[]=new long[N];
    byte by=15;
    double d=-2.60742;
    short s=-8987;
    float f=2.139F;

    init(lArr, 3966337806L);

    for (i = 2; i < 86; i++) {
        for (i1 = 3; i1 < 58; i1++) {
            Main.instanceCount *= (-(-(--lArr[i - 1])));
            i2 += (int)(((i1 - i2) + (l = i1)) * Main.iArrFld[i]);
            l -= (i2++);
            i2 = (int)(l - ((i2--) * (i * Main.instanceCount)));
            by >>= (byte)i;
            i2 += (int)(6500046927811834979L + (i1 * i1));
        }
        i2 = (int)(d -= (i1 * 85));
        i2 >>= ((i2--) + (-(Main.iArrFld[i] *= s)));
        l = (long)((i2 - (i2 - i)) - ((i * -1.601F) % (((long)(i2 * 79.28974)) | 1)));
        f *= (++lArr[i]);
        Main.iArrFld[i] = ((--i2) - i2);
        i2 = ((--i2) - i2);
        i2 = i;
        i2 /= (int)((long)(d) | 1);
    }
    for (i3 = 1; i3 < 91; i3++) {
        i2 = i3;
        i2 -= (int)((l--) + ((0.51655 * (f - l)) + (l++)));
        i2 *= (int)Main.instanceCount;
    }
    for (i4 = 4; i4 < 86; ++i4) {
        f += 102.170F;
        i2 *= (int)((d * (--lArr[i4 + 1])) - (++Main.iArrFld[i4 + 1]));
        l >>>= (i2 += (++i2));
        i2 *= (int)((f++) - (-(Main.iArrFld[i4 + 1]++)));
    }

    System.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
    System.out.println("l by d = " + l + "," + by + "," + Double.doubleToLongBits(d));
    System.out.println("s f i3 = " + s + "," + Float.floatToIntBits(f) + "," + i3);
    System.out.println("i4 lArr = " + i4 + "," + checkSum(lArr));

    System.out.println("Main.instanceCount Main.iArrFld = " + Main.instanceCount + "," + checkSum(Main.iArrFld));
}
}
