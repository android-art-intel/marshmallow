/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.1.005). Tue Jan 28 18:54:44 2014
package OptimizationTests.regression.test168034;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 600;

    public static void main(String[] c) {

        short xr = 15631;
        boolean q6x = false;
        byte pco = 105;
        long tip = 8671762347448603157L, lk = -4856935002976673748L, dhe = 5520583427314269662L, r2 = 5030733581841247949L, i = 4114276295509347808L;
        float x06 = 119.56F;
        int s4 = 7355, i5f = 58711, ogq = 31983, mpu = 13587, z = -46076, b = -20266, xge = -21721, cg = 54063, s = 60484, a[] = new int[N], td[] = new int[N], yvn[] = new int[N];
        double m = -125.564;

        init(a, -27346);
        init(td, 40260);
        init(yvn, -41091);

        for (s4 = 1; s4 < 523; s4++) {
            tip -= tip;
            i5f = (int) (lk *= (a[s4 - 1] *= (-(++i5f))));
            for (ogq = 1; ogq < 199; ++ogq) {
                x06 = (((s4 + 62.172F) - a[s4 - 1]) / (((mpu * xr) - tip) | 1));
                m = (-31348 << ((i5f + z) - (-(i5f - s4))));
                z *= (int) ((-lk) >> ((--td[s4]) + (i5f - s4)));
                x06 += (dhe--);
            }
            pco = (byte) ((s4 - (-52686 >> (lk + r2))) - (i5f = z));
        }

        for (b = 28; b > 1; --b) {
            q6x = (xge == yvn[b]);
        }
        for (cg = 55; cg > 2; cg -= 2) {
            s = 12;
            do {
                x06 /= (i | 1);
                x06 = pco;
            } while (--s > 0);
        }

        System.out.println("s4 tip i5f = " + s4 + "," + tip + "," + i5f);
        System.out.println("lk ogq x06 = " + lk + "," + ogq + ","
                + Float.floatToIntBits(x06));
        System.out.println("mpu xr m = " + mpu + "," + xr + ","
                + Double.doubleToLongBits(m));
        System.out.println("z dhe pco = " + z + "," + dhe + "," + pco);
        System.out.println("r2 b q6x = " + r2 + "," + b + "," + q6x);
        System.out.println("xge cg s = " + xge + "," + cg + "," + s);
        System.out.println("i a td = " + i + "," + checkSum(a) + ","
                + checkSum(td));
        System.out.println("yvn = " + checkSum(yvn));

    }
}
