/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Android Runtime Fuzzer tool (4.0.001). Wed Nov 18 10:52:59 2015
// srand = 5337358578652340790733593319012355857626720653615133577285649056123

package OptimizationTests.regression.test2890_1;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=0L;
    public static int iFld=-7;
    public static double dFld=-1.113676;
    public static byte byArrFld1[][]=new byte[N][N];
    public static int iArrFld3[][]=new int[N][N];

    static {
        init(Main.byArrFld1, (byte)-90);
        init(Main.iArrFld3, -108);
    }

public static void main(String[] strArr) {

    Cls O1=new Cls();
    long lArr[]=new long[N];
    int i=-10, i1=-53502, i2=12, i9=-60631, iArr[][]=new int[N][N];
    byte by=125;

    init(iArr, -129);
    init(lArr, -80L);

    for (i = 4; i < 92; i++) {
        Main.iFld += Main.iFld;
        for (i1 = i; i1 > 1; --i1) {
            Main.iFld -= (Main.iFld++);
            for (i2 = i; i2 < 53; ++i2) {
                O1 = (O1 = (O1 = (O1 = O1)));
                iArr = (iArr = (iArr = (iArr = int2array(N, (int)11))));
                switch ((((iArr[i1][i2 - 1] >>> 1) % 1) * 5) + 114) {
                case 119:
                    lArr = lArr;
                    Cls6.OFld = (Cls6.OFld = new Cls5());
                    Cls1.instanceCount += i2;
                    break;
                default:
                    Main.byArrFld1 = (Main.byArrFld1 = (Main.byArrFld1 = Main.byArrFld1));
                    Cls6.OFld = (Cls6.OFld = (Cls6.OFld = (Cls6.OFld = Cls6.OFld)));
                    O1 = O1;
                    if ((!(Math.max(i2, i1) <= (-(Cls1.instanceCount * 5.27558)))) || (i >= iArr[i1 + 1][i1 - 1]))
                        break;
                }
                Main.iFld -= (int)((39035 + (-190L - (++Cls3.instanceCount))) >>> (lArr[i1]--));
                Cls1.iFld1 = (iArr[(Cls5.iFld2 >>> 1) % N][i2] - by);
                O1 = null;
                Cls5.iFld2 = (int)Cls7.fFld1;
                Cls5.iFld2 += (int)(lArr[i2 - 1] ^= (--Cls5.iFld2));
                Main.dFld += (Cls4.OFld1.OFld2.iFld3--);
                Cls3.instanceCount += (((i2 * i2) + Cls7.fFld1) - i);
            }
            Cls7.fFld1 += (-((Main.iFld - Cls7.fFld1) * (i9 + i2)));
            Main.instanceCount = Main.iArrFld3[i1][i1 + 1];
            Cls4.dArrFld[i1 - 1] -= (Cls7.fFld1 - Math.abs((int)(87 + (Cls.instanceCount * i))));
        }
    }

    System.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
    System.out.println("by Cls4.OFld1.OFld2.iFld3 i9 = " + by + "," + Cls4.OFld1.OFld2.iFld3 + "," + i9);
    System.out.println("iArr lArr Cls4.OFld1.OFld2 = " + checkSum(iArr) + "," + checkSum(lArr) + "," +
        checkSum(Cls4.OFld1.OFld2));
    System.out.println("O1 Cls Cls1 = " + checkSum(O1) + "," + Cls.instanceCount + "," + Cls1.instanceCount);
    System.out.println("Cls2 Cls3 Cls4 = " + Cls2.instanceCount + "," + Cls3.instanceCount + "," + Cls4.instanceCount);
    System.out.println("Cls5 Cls6 Cls7 = " + Cls5.instanceCount + "," + Cls6.instanceCount + "," + Cls7.instanceCount);

    System.out.println("Main.instanceCount Main.iFld Main.dFld = " + Main.instanceCount + "," + Main.iFld + "," +
        Double.doubleToLongBits(Main.dFld));
    System.out.println("Main.byArrFld1 Main.iArrFld3 Cls = " + checkSum(Main.byArrFld1) + "," + checkSum(Main.iArrFld3)
        + "," + Cls.instanceCount);
    System.out.println("Cls1 Cls2 Cls3 = " + Cls1.instanceCount + "," + Cls2.instanceCount + "," + Cls3.instanceCount);
    System.out.println("Cls4 Cls5 Cls6 = " + Cls4.instanceCount + "," + Cls5.instanceCount + "," + Cls6.instanceCount);
    System.out.println("Cls7 = " + Cls7.instanceCount);
}
}
///////////////////////////////////////////////////////////////////////
class Cls extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=169L;
    public float fFld=-11.451F;
    public static Object OArrFld[]=new Object[N];
    public static int iArrFld2[]=new int[N];

    static {
        init(Cls.OArrFld, new Cls8());
        init(Cls.iArrFld2, -150);
    }

    public static long Cls_check_sum = 0;

public  Cls() {

    instanceCount++;
    int i3=-29, i7=-9, i8=9;
    float fArr[]=new float[873726];

    init(fArr, -2.160F);

    i3 = 1;
    while (++i3 < 85) {
        Cls.OArrFld = Object1array(N, (Object)new Cls3());
        for (i7 = 1; i7 < 28; ++i7) {
            Cls1.iFld1 <<= (int)(Cls1.instanceCount -= (long)(Cls4.fArrFld1[i7 + 1] - (-fArr[i3])));
            Cls1.iFld1 += i7;
            fFld += ((++Cls1.iFld1) - fFld);
            Cls1.iFld1 += (int)fFld;
            i8 = 1;
            do {
                Cls2.instanceCount += (i8 * i8);
                Cls6.OFld = (Cls6.OFld = Cls6.OFld);
                fFld = (Cls.instanceCount++);
                Cls.iArrFld2 = (Cls.iArrFld2 = Cls.iArrFld2);
            } while (++i8 < 76);
        }
    }
    long meth_res = i3 + i7 + i8 + Double.doubleToLongBits(checkSum(fArr));
    Cls_check_sum += meth_res;
    return;
}

}

class Cls1 extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=654789471482153805L;
    public static int iFld1=114;
    public int iArrFld[]=new int[N];
    public float fArrFld[][]=new float[N][N];

    public static long Cls1_check_sum = 0;

public  Cls1() {

    instanceCount++;
    boolean b=false;
    int i4=-3, i5=-58091, i6=-6;
    Cls2 O=new Cls2();
    double d=86.92598, dArr[]=new double[N];

    init(O.byArrFld, (byte)71);
    init(dArr, 0.104294);

    for (i4 = 1; i4 < 79; i4++) {
        iArrFld = (iArrFld = (iArrFld = Cls2.iArrFld1));
        O.byArrFld = (O.byArrFld = (O.byArrFld = (O.byArrFld = O.byArrFld)));
        iArrFld = (iArrFld = (iArrFld = iArrFld));
        iArrFld = iArrFld;
        for (i5 = 3; i5 < 81; ++i5) {
            for (i6 = 2; i6 < 59; i6++) {
                Cls1.iFld1 <<= (int)(Cls2.instanceCount -= ((-2 * (-iArrFld[i6 + 1])) * (i4 - Cls1.instanceCount)));
                Cls1.instanceCount = i6;
                b = (b = ((O.byFld + d) == (i5 - i5)));
                fArrFld[i5 + 1][i6 + 1] -= (float)(dArr[i6] += (-(i4 + i5)));
                O = (O = (O = (O = O)));
            }
        }
    }
    long meth_res = i4 + i5 + i6 + (b ? 1 : 0) + O.byFld + Double.doubleToLongBits(d) + checkSum(O.byArrFld) +
        Double.doubleToLongBits(checkSum(dArr));
    Cls1_check_sum += meth_res;
    return;
}

}

class Cls2 extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=-19L;
    public byte byFld=85;
    public static int iArrFld1[]=new int[N];
    public byte byArrFld[]=new byte[N];

    static {
        init(Cls2.iArrFld1, -13);
    }

}

class Cls3 extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=8477662761054269961L;

}

class Cls4 extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=-1116976300778346289L;
    public static float fArrFld1[]=new float[884894];
    public static double dArrFld[]=new double[N];
    public static Cls6 OFld1=new Cls6();

    static {
        init(Cls4.fArrFld1, 81.374F);
        init(Cls4.dArrFld, 0.118035);
    }

}

class Cls5 extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=-120071557L;
    public static int iFld2=18;

}

class Cls6 extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=-23L;
    public static Cls5 OFld=new Cls5();
    public Cls7 OFld2=new Cls7();

}

class Cls7 extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=39949L;
    public static float fFld1=111.371F;
    public int iFld3=-10711;

}

class Cls8 extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=-3L;

}
