/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Android Runtime Fuzzer tool (4.1.002). Thu Feb 25 15:27:57 2016
// srand = 181543395130831167270859514123476192861

package OptimizationTests.regression.test3374;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=-2008702365360911552L;
    public static int iArrFld[]=new int[N];
    public static byte byArrFld[]=new byte[N];

    static {
        init(Main.iArrFld, -31);
        init(Main.byArrFld, (byte)83);
    }

public static void main(String[] strArr) {

    int i=-3399, i1=90, i2=13, i3=0, i4=-82;
    short s=20257;
    byte by=-71;
    double d=1.84112;
    float f=-93.950F, f1=-125.995F;
    long lArr[]=new long[N];

    init(lArr, 8007192168887066352L);

    for (i = 89; i > 1; i -= 2) {
        Main.iArrFld[i] -= (-s);
    }
    for (long l : lArr) {
        by = (byte)(s++);
    }
    for (i1 = 5; i1 < 95; i1++) {
        i2 += (int)((d++) - (d++));
        f = i1;
        for (f1 = i1; f1 < 72; ++f1) {
            for (i3 = 1; i3 < 29; ++i3) {
                s += (short)(((--Main.iArrFld[i3 + 1]) + (i2 - 6195509472986500958L)) + i3);
                Main.instanceCount -= (long)(i3 + ((i1 * by) + -2.44F));
                i2 += Main.iArrFld[i3 + 1];
                i2 += (((i3 * f1) + f) - i);
                Main.iArrFld[i3 + 1] >>= Integer.reverseBytes((int)((i - i1) - (60533 % ((long)(f1) | 1))));
            }
            for (i4 = 1; i4 < f1; ++i4) {
                i2 -= (int)(-2 - ((i2--) * (d * 161)));
                i2 *= (int)(((-(i - i4)) * (i2 ^= (int)-3453L)) - ((i2 - d) - (1.895F + Main.iArrFld[i1 - 1])));
                i2 *= (int)(Main.instanceCount - Main.iArrFld[i4]);
                Main.iArrFld[i4 - 1] += (int)((0.193F + (-98.660F + (--i2))) - lArr[(int)(f1 + 1)]);
            }
            i2 *= (Main.iArrFld[i1 - 1] - (i2 *= (i3 * i)));
            i2 = (int)(Main.iArrFld[i1 - 1] - ((-(i * 246L)) + -1));
            Main.instanceCount += i1;
        }
        lArr[i1] += lArr[i1 + 1];
        f += i1;
        d = Main.byArrFld[i1];
    }

    System.out.println("i s by = " + i + "," + s + "," + by);
    System.out.println("i1 i2 d = " + i1 + "," + i2 + "," + Double.doubleToLongBits(d));
    System.out.println("f f1 i3 = " + Float.floatToIntBits(f) + "," + Float.floatToIntBits(f1) + "," + i3);
    System.out.println("i4 lArr = " + i4 + "," + checkSum(lArr));

    System.out.println("Main.instanceCount Main.iArrFld Main.byArrFld = " + Main.instanceCount + "," +
        checkSum(Main.iArrFld) + "," + checkSum(Main.byArrFld));
}
}
