/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (2.1.003). Mon May 19 11:14:33 2014
package OptimizationTests.regression.test196385;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

public static final int N = 30;

public static long b1_check_sum = 0;
public static long st_check_sum = 0;

public static int b1(int p9) {

    byte v=121;
    int i7=53208, k=-48180, ptr=21216, pn=-58391, j8a=-44566, qk=-53289, o8=32153, lm=-48724, ogf=17422, hji=-9479,
        vc[]=new int[N], cp[]=new int[N], duz[]=new int[N], sn[][]=new int[N][N];
    long z=-7437306496169359624L, wy4[][]=new long[N][N], anb[]=new long[N];
    short x[][]=new short[N][N];

    init(vc, -33745);
    init(cp, -20454);
    init(wy4, -4321181122189236875L);
    init(x, (short)-30723);
    init(duz, -57847);
    init(anb, -4721289763937303347L);
    init(sn, -54646);

    for (i7 = 1; i7 < 26; i7++) {
        if (i7 >= 0) {
            for (k = 1; k < 4; ++k) {
                for (ptr = 4; ptr > i7; --ptr) {
                    vc[k+1] = (int)(vc[i7+1]);
                }
            }
            z -= (long)((((cp[i7]) + (wy4[i7][i7-1])) + z) - ((x[i7][i7-1]) * (++pn)));
            j8a = (int)((duz[i7]) + (anb[i7]));
            for (qk = i7; qk > 1; --qk) {
                try {
                    o8 = (int)(p9 % 32960);
                    anb[i7] = (long)(2756 / x[i7][i7]);
                    lm = (int)(sn[i7+1][i7+1] % -28);
                    cp[qk-1] = (int)(ogf / 4299);
                    v = (byte)(hji / -157);
                } catch (ArithmeticException a_e) {}
            }
        }
    }

    long meth_res = p9 + i7 + k + ptr + z + pn + j8a + qk + o8 + lm + ogf + hji + v + checkSum(vc) + checkSum(cp) +
        checkSum(wy4) + checkSum(x) + checkSum(duz) + checkSum(anb) + checkSum(sn);
    b1_check_sum += meth_res;
    return (int)meth_res;
}

public static void st() {

    byte m7l[]=new byte[N];
    int z9a=-10362, a=-43005, j9=-35316, n=-55205, j0=-9394, dd=-17752, kw=2618, u=16260, xl=45812, ctt=1928, j=-15112,
        zmq=-16491, i=50231, zd=33453, p=-50004, ky=14721, jqd=-33480, v=-41646, t[]=new int[N], f8[][]=new int[N][N],
        ezd[]=new int[N], c[][]=new int[N][N], inf[]=new int[N];
    long ez=-6937368976918053077L, f[][]=new long[N][N], o[]=new long[N];
    char zs[][]=new char[N][N];

    init(t, -43600);
    init(zs, (char)13922);
    init(f, -4137505265711386784L);
    init(m7l, (byte)-6);
    init(f8, -15261);
    init(ezd, 34546);
    init(c, -29974);
    init(inf, -45994);
    init(o, 1672267025656306775L);

    t[23] = 3;
    switch ((int)t[23]) {
        case 1:
            for (z9a = 1; z9a < 8; ++z9a) {
                for (a = z9a; a < 6; ++a) {
                    for (j9 = a; j9 < 2; j9++) {
                        zs[j9][a-1] = (char)(t[j9-1]);
                    }
                }
                zs[z9a][z9a] += (char)((36105 - (n--)) + (f[z9a][z9a+1]));
            }
            for (j0 = 1; j0 < 8; j0++) {
                f8[j0][j0] += (int)(t[j0]);
            }
            break;
        case 2:
            for (kw = 16; kw > 1; --kw) {
                for (u = kw; u > 1; u--) {
                    for (xl = 1; xl < 5; ++xl) {
                        dd = (int)(m7l[kw-1]);
                    }
                }
            }
            break;
        case 3:
            for (ctt = 1; ctt < 10; ctt++) {
                ez -= (long)(c[ctt-1][ctt-1]);
            }
            break;
        default:
            for (j = 1; j < 6; ++j) {
                try {
                    inf[j+1] = (int)(26 % dd);
                    o[j+1] = (long)(zmq / 52);
                    zd = (int)(-12889 / i);
                    ky = (int)(-7578 / p);
                    v = (int)(inf[j-1] / jqd);
                } catch (ArithmeticException a_e) {}
            }
    }

    st_check_sum += z9a + a + j9 + n + j0 + dd + kw + u + xl + ctt + ez + j + zmq + i + zd + p + ky + jqd + v +
        checkSum(t) + checkSum(zs) + checkSum(f) + checkSum(m7l) + checkSum(f8) + checkSum(ezd) + checkSum(c) +
        checkSum(inf) + checkSum(o);
}

public static void main(String[] oly) {

    int nv9=-1685, skl=-29821, wo=-10565, g1a=23795, x=57562, h3=-5217, lxx=-28010, hhs=7205, w36=-30511, q4=4875,
        wij=6642, bhb=53957, d=-52654, egc=6168, wn[][]=new int[N][N], m0e[]=new int[N], x0[][]=new int[N][N],
        r1q[]=new int[N], s6[][]=new int[N][N], g60[][]=new int[N][N], aj[]=new int[N], ga[]=new int[N];
    long kqf=-7459571032129466164L, n=-6547837816841324703L, a=7474389427271108029L, oy=-6147041359958647705L,
        b=-8066671646317907822L, s[]=new long[N], l[]=new long[N], a6c[][]=new long[N][N];
    short u2m=9628;

    init(wn, 43780);
    init(s, 435459691510748285L);
    init(m0e, 56014);
    init(x0, 58335);
    init(l, -2872157423574720020L);
    init(r1q, -23304);
    init(a6c, 8893551234868992804L);
    init(s6, -57376);
    init(g60, 24415);
    init(aj, 26853);
    init(ga, -9290);

    try {
        int h = 11;
        do {
            for (nv9 = 1; nv9 < 15; ++nv9) {
                wn[nv9-1][nv9+1] += (int)(wn[nv9][nv9+1]);
                s[nv9-1] -= (long)(s[nv9]);
                m0e[nv9] += (int)(x0[nv9][nv9+1]);
                for (long yj: l) {
                    wn[nv9-1][nv9-1] = 2;
                    switch ((int)wn[nv9-1][nv9-1]) {
                        case 1:
                            u2m += (short)(r1q[nv9]);
                            break;
                        case 2:
                            if (x0[nv9-1][nv9] == (r1q[nv9]) - (b1((int)(a6c[nv9+1][nv9])))) {
                                try {
                                    u2m = (short)(a6c[nv9+1][nv9] / u2m);
                                    kqf = (long)(skl / -175);
                                    a = (long)(kqf / n);
                                    wo = (int)(oy % kqf);
                                    m0e[nv9-1] = (int)(g1a % 24409);
                                } catch (ArithmeticException a_e) {}
                                if (x > 0) break;
                                h3 *= (int)(a6c[nv9+1][nv9]);
                                if (-5960901953100278350L - (s6[nv9][nv9+1]) == g60[nv9][nv9+1]) {
                                }
                            } else {
                                b *= (long)(l[nv9-1]);
                            }
                        default:
                            u2m = (short)(aj[nv9]);
                    }
                }
            }
        } while ( --h > 0 );
    } catch (ArrayIndexOutOfBoundsException up) {
        for (lxx = 1; lxx < 25; lxx += 2) {
            try {
                w36 = (int)(hhs / 5203);
                q4 = (int)(l[lxx] / 41);
                b = (long)(r1q[lxx] % -144);
                skl = (int)(b % oy);
                aj[lxx-1] = (int)(wo / wij);
            } catch (ArithmeticException a_e) {}
        }
        for (bhb = 1; bhb < 18; ++bhb) {
            d += (int)(-7708710715848833211L + ((a6c[bhb-1][bhb]) + 6058751368071958050L));
        }
    } finally {
        for (egc = 13; egc > 1; egc--) {
            r1q[egc+1] = (int)(s[egc]);
        }
        st();
    }

    System.out.println("int: " + nv9 + "," + skl + "," + wo + "," + g1a + "," + x + "," + h3 + "," + lxx + "," + hhs +
        "," + w36 + "," + q4 + "," + wij + "," + bhb + "," + d + "," + egc + "," + checkSum(wn) + "," + checkSum(m0e) +
        "," + checkSum(x0) + "," + checkSum(r1q) + "," + checkSum(s6) + "," + checkSum(g60) + "," + checkSum(aj) + ","
        + checkSum(ga));
    System.out.println("long: " + kqf + "," + n + "," + a + "," + oy + "," + b + "," + checkSum(s) + "," + checkSum(l)
        + "," + checkSum(a6c));
    System.out.println("short: " + u2m);

    System.out.println("b1_check_sum: " + b1_check_sum);
    System.out.println("st_check_sum: " + st_check_sum);
}
}
