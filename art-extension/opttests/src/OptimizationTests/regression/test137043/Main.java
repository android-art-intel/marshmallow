/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (2.1.003). Mon Sep  9 03:44:16 2013

package OptimizationTests.regression.test137043;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 30;

    public static long r1g_check_sum = 0;
    public static long em_check_sum = 0;

    public static int r1g(int ui) {

        int qr = 18762, hyd = 20790, p5 = 18309, l5 = -62781, d = -25737, bs = 45472, pib[][] = new int[N][N], w[][] = new int[N][N];
        byte q = -55, i = -23;
        long uf8 = 3554903278953025750L, bw2[] = new long[N], yb[][] = new long[N][N];

        init(pib, 43075);
        init(bw2, 6923787314152666110L);
        init(w, 12732);
        init(yb, 2286979541375130897L);

        for (qr = 1; qr < 12; ++qr) {
            hyd *= (int) (pib[qr + 1][qr + 1]);
            pib[qr - 1][qr] += (int) (bw2[qr - 1]);
            q -= (byte) (p5--);
            uf8 += (long) (bw2[qr - 1]);
        }

        for (l5 = 1; l5 < 9; ++l5) {
            try {
                d = (int) (q / -93);
                bw2[l5 - 1] = (long) (-1922828639 / bw2[l5 - 1]);
                q = (byte) (pib[l5 + 1][l5 - 1] % -52184);
                hyd = (int) (bw2[l5 - 1] % i);
                bs = (int) (w[l5 + 1][l5] % yb[l5][l5]);
            } catch (ArithmeticException a_e) {
            }
        }

        long meth_res = ui + qr + hyd + q + p5 + uf8 + l5 + d + i + bs
                + checkSum(pib) + checkSum(bw2) + checkSum(w) + checkSum(yb);
        r1g_check_sum += meth_res;
        return (int) meth_res;
    }

    public static byte em() {

        int u = 65457, p2 = -62212, hc = -8690, s = -14240, yuq = 22474, t = -62882, uz8[] = new int[N], ne[] = new int[N], vw2[][] = new int[N][N];

        init(uz8, -1844);
        init(ne, 41000);
        init(vw2, 7505);

        for (u = 27; u > 1; u--) {
            for (p2 = 4; p2 > 1; --p2) {
                uz8[u - 1] = (int) (uz8[u - 1]);
            }
        }

        if (uz8[11] > uz8[22]) {
            if (uz8[20] != ne[20]) {
                for (hc = 14; hc > 1; hc--) {
                    if ((((hc) + hc) + hc) + (s++) == vw2[hc + 1][hc - 1]) {
                        s -= (int) (yuq--);
                    } else {
                        if (t > 0) {
                            return (byte) (u + p2 + hc + s + yuq + t
                                    + checkSum(uz8) + checkSum(ne) + checkSum(vw2));
                        }

                    }

                }

            }

        }

        long meth_res = u + p2 + hc + s + yuq + t + checkSum(uz8)
                + checkSum(ne) + checkSum(vw2);
        em_check_sum += meth_res;
        return (byte) meth_res;
    }

    public static void main(String[] dl) {

        char lc = 8106;
        int z3 = -57681, mqb = -41953, jz = 552, a = 56179, b3m = -9660, jd = 13043, uo = 49340, khl = -23590, w[][] = new int[N][N], plp[][] = new int[N][N], ysx[] = new int[N], tb[] = new int[N], b[] = new int[N];
        byte x[] = new byte[N];
        long r64[] = new long[N], f6[][] = new long[N][N], k[] = new long[N], j[][] = new long[N][N];

        init(r64, 694271316943493495L);
        init(x, (byte) -102);
        init(f6, -7160670116107273163L);
        init(w, -49548);
        init(k, -8188288617109220140L);
        init(plp, 19367);
        init(ysx, 2479);
        init(tb, -9147);
        init(j, 1410773873005921657L);
        init(b, 53111);

        for (z3 = 1; z3 < 20; z3 += 3) {
            for (mqb = 1; mqb < 13; ++mqb) {
                r64[mqb] = (long) (r64[z3 - 1]);
            }
        }

        r64[16] *= (long) (x[13]);

        for (jz = 1; jz < 25; jz += 2) {
            for (a = 2; a > 1; --a) {
                f6[a][jz - 1] = (long) (w[jz][a]);
            }
        }

        if ((jz - (k[20])) + a >= (r1g((int) (x[5]))) - 7036) {
            for (b3m = 1; b3m < 9; b3m++) {
                plp[b3m + 1][b3m - 1] = (int) ((ysx[b3m]) - (k[b3m - 1]));

                for (jd = 1; jd < 4; ++jd) {
                    lc *= (char) ((tb[jd]) + jz);
                    for (uo = 1; uo < b3m; uo += 3) {
                        if (plp[b3m - 1][uo - 1] == (f6[jd][uo]) - a) {
                            k[b3m - 1] += (long) (j[jd + 1][jd + 1]);
                            ysx[uo] = (int) (f6[uo + 1][uo - 1]);
                            plp[uo][b3m - 1] = (int) (em());
                        }
                    }
                    for (khl = 1; khl < b3m; khl += 3) {
                        b[b3m + 1] += (int) (tb[jd - 1]);
                    }
                }
            }
        }

        System.out.println("char: " + (int) lc);
        System.out.println("int: " + z3 + "," + mqb + "," + jz + "," + a + ","
                + b3m + "," + jd + "," + uo + "," + khl + "," + checkSum(w)
                + "," + checkSum(plp) + "," + checkSum(ysx) + ","
                + checkSum(tb) + "," + checkSum(b));
        System.out.println("byte: " + checkSum(x));
        System.out.println("long: " + checkSum(r64) + "," + checkSum(f6) + ","
                + checkSum(k) + "," + checkSum(j));

        System.out.println("r1g_check_sum: " + r1g_check_sum);
        System.out.println("em_check_sum: " + em_check_sum);
    }
}
