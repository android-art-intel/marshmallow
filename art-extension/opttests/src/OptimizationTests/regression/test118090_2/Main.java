/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool. Mon Jun 24 05:57:40 2013
package OptimizationTests.regression.test118090_2;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

public static final int N = 30;

public static void main(String[] o) {

    int qr=54431, l6t=37352, b1=-28152, x7t=-5802, c[][]=new int[N][N], no5[][]=new int[N][N], yg1[]=new int[N],
        ih[][]=new int[N][N], kz[][]=new int[N][N], i[][]=new int[N][N], y[]=new int[N], m[][]=new int[N][N];
    byte ya[][]=new byte[N][N];
    long f=-468959684803071295L;

    init(c, -56568);
    init(no5, 38427);
    init(yg1, -16722);
    init(ih, -13726);
    init(kz, 36849);
    init(i, 54824);
    init(y, -47896);
    init(m, 54776);
    init(ya, (byte)0);



    for (qr = 1; qr < 17; qr++) {
        c[qr-1][qr] -= (int)(c[qr][qr+1]);
        no5[qr-1][qr-1] += (int)((yg1[qr]) - (c[qr-1][qr+1]));
        yg1[qr-1] -= (int)((qr + qr) - (ih[qr][qr-1]));
        f += (long)(((f - (yg1[qr-1])) - (kz[qr][qr-1])) - f);
    }


    for (l6t = 1; l6t < 17; l6t++) {
        int jo = 11;
        while ( --jo > 0 ) {

            if (i[l6t+1][l6t] != i[l6t-1][l6t-1]) {
                int h = 11;
                while ( --h > 0 ) {
                    y[l6t+1] += (int)(m[l6t][l6t-1]);
                }

                int fig = 11;
                do {

                } while ( --fig > 0 );

                ya[l6t-1][l6t+1] = (byte)(b1++);
                x7t -= (int)(b1 * x7t);
            }


        }

    }


    System.out.println("int: " + qr + "," + l6t + "," + b1 + "," + x7t + "," + checkSum(c) + "," + checkSum(no5) + ","
        + checkSum(yg1) + "," + checkSum(ih) + "," + checkSum(kz) + "," + checkSum(i) + "," + checkSum(y) + "," +
        checkSum(m));
    System.out.println("byte: " + checkSum(ya));
    System.out.println("long: " + f);

}
}
