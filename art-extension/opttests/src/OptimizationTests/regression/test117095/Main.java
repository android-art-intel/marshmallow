/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// test generated by Dalvik Fuzzer
package OptimizationTests.regression.test117095;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

	public static final int N = 100;

	public static void main(String[] args) {
		char k[] = new char[N];
		int d = -41584, z = 4422, t = 58906, fa = -14880, cg = 27641, psq = -12512, v = 54981, nrb = 2425, eg8 = -28497, wud[][] = new int[N][N], ar[][] = new int[N][N], yji[] = new int[N], j[] = new int[N], og[][] = new int[N][N], e[] = new int[N], dkr[] = new int[N];
		byte ltz = 85;

		init(k, (char) 49725);
		init(wud, 21480);
		init(ar, 62862);
		init(yji, -16709);
		init(j, 13506);
		init(og, -14456);
		init(e, -35185);
		init(dkr, -40052);

		int m = 11;
		do {
			int df = 11;
			while (--df > 0) {
				d = (int) (++z);
				z = -100;
				ltz = (byte) ((z * (d * (k[12]))) - z);
			}
			try {
				t = (int) (z / t);
				t = (int) (-1284629006 % ltz);
				z = (int) (-214 % t);
				ltz = (byte) (64904 % t);
			} catch (ArithmeticException a_e) {
			}
		} while (--m > 0);

		if (d == -99) {
			System.out.println("TEST PASSED");
		} else {
			System.out.println("TEST FAILED: d = " + d);
		}
	}

}
