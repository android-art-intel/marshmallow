/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.3.002). Thu Aug  7 23:24:01 2014
package OptimizationTests.regression.test216008;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

public static final int N = 150;

public static void main(String[] x) {

    long d=-6710793759255362476L, n=965275640606948083L, x3r=4574198732652138983L;
    double bb4=122.772, o=37.737;
    short i=-7312;
    int l=38580, cfd=-15140, r9z=15083, hls=-56660, ceu=-27634;
    float e=-63.864F;

    for (l = 2; l < 329; l++) {
        cfd = l;
        cfd = (-(cfd--));
        for (r9z = l; r9z < 302; r9z++) {
            for (d = 3; d < 137; d++) {
                cfd = (cfd++);
            }
            cfd &= (int)((-(r9z * d)) - (l * (-19770 * (cfd + 17022))));
            cfd = (int)(--n);
        }
    }

    System.out.println("d n e = " + d + "," + n + "," + Float.floatToIntBits(e));
}
}
