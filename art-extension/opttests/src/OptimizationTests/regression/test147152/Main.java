/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.1.001). Mon Oct 21 03:50:06 2013

package OptimizationTests.regression.test147152;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 2000;

    public static void main(String[] jnb) {

        int l2 = 57941, g = 18163, h9 = 47477, j7o = -49945, xqf = 17395, xp9 = -314, snm = -7254, qb = 11524, py0 = 4820, dp0 = 39613, of = -26851, u3l = -38606, m4 = 45557, nf = -49145, s6w = 39522, xq = 9956, j = 13915, r[][] = new int[N][N], g47[] = new int[N];
        byte e = -122;
        double a = 96.551, qhi = 1.151, z28[] = new double[N];
        float tu = -66.43F;
        long d9m = -6806289908627598474L, n = -5031214643117448062L, o = 3582598702432394177L, sx = 7757281901232280887L, m0n = -2964332705890249579L, v98[] = new long[N];

        init(r, -45713);
        init(g47, 42988);
        init(z28, -24.627);
        init(v98, 11135875600318373L);

        l2 = 16000;
        while (--l2 > 0) {
            g <<= h9;
            d9m = 57860;
        }
        for (j7o = 1800; j7o > 1; --j7o) {
            a %= ((r[j7o][j7o + 1] >>> 1) + 1);
            g47[j7o + 1] *= (int) ((long) ((44171 >> (-(-34922 - n))) / (((long) z28[j7o + 1] >>> 1) + 1)) << 4894261974654482755L);
        }
        for (xqf = 1; xqf < 18000; ++xqf) {
            o = xp9;
            snm <<= j7o;
        }
        qb = 23000;
        do {
            v98[(py0 >>> 1) % N] |= ((-(dp0 | sx)) + -18519);
            of = (int) ((++e) * ((qhi *= -4070982788866919873L) * (u3l + 922708404035179032L)));
            m4 = (int) (-51635 + ((xp9--) * (-16819 * tu)));
            // Test integer division optimization
            try {
                py0 = (r[(-6331 >>> 1) % N][(nf >>> 1) % N] % 38872);
                xq = (xp9 / s6w);
                xq = (j % -45723);
            } catch (ArithmeticException a_e) {
            }
            g47[(l2 >>> 1) % N] /= (int) (((m0n - ((h9 << 7397903076807024200L) - (j++))) >>> 1) + 1);
        } while (--qb > 0);

        System.out.println("o: " + o);

        System.out.println("int: " + l2 + "," + g + "," + h9 + "," + j7o + ","
                + xqf + "," + xp9 + "," + snm + "," + qb + "," + py0 + ","
                + dp0 + "," + of + "," + u3l + "," + m4 + "," + nf + "," + s6w
                + "," + xq + "," + j + "," + checkSum(r) + "," + checkSum(g47));
        System.out.println("byte: " + e);
        System.out.println("double: " + a + "," + qhi + "," + checkSum(z28));
        System.out.println("float: " + tu);
    }
}
