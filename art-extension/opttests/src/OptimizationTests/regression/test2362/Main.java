/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Android Runtime Fuzzer tool (3.5.002). Mon Jul 27 17:53:02 2015
// srand = 18549618822946597416045128773174602736294746070280799450840672702967

package OptimizationTests.regression.test2362;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static short sFld=-25701;

public static void main(String[] strArr) {

    byte by=-64, byArr[]=new byte[N];
    boolean b=true;
    long l=10L, l1=-1121L, lArr[]=new long[N];
    int i=8247, i1=-2, i2=14, iArr[]=new int[N];
    float f=57.151F;
    double d=-109.18688, dArr[]=new double[N];

    init(byArr, (byte)-18);
    init(iArr, 141);
    init(lArr, -48L);
    init(dArr, -116.109141);

    for (i = 5; i < 98; i++) {
        i1 = i;
        i1 = (int)(-Float.intBitsToFloat((int)(d + -47585)));
        l -= (long)((--f) - i1);
        i1 = (((i1 = i) * byArr[i]) + ((i - i1) / (i | 1)));
        l += (i | by);
        i1 = (int)(by = (byte)l);
        for (i2 = 2; i2 < 57; i2++) {
            i1 = (i1++);
            l >>= iArr[i];
            by += (byte)(i2 * i2);
            by *= (byte)(((l1 - i2) + 10664) << 5758);
            f *= lArr[i2];
            i1 = (int)dArr[i];
            if (b && (!b)) break;
        }
        iArr[i] = sFld;
        i1 -= -9;
    }

    System.out.println("i i1 d = " + i + "," + i1 + "," + Double.doubleToLongBits(d));
    System.out.println("l f by = " + l + "," + Float.floatToIntBits(f) + "," + by);
    System.out.println("i2 l1 b = " + i2 + "," + l1 + "," + (b ? 1 : 0));
    System.out.println("byArr iArr lArr = " + checkSum(byArr) + "," + checkSum(iArr) + "," + checkSum(lArr));
    System.out.println("dArr = " + Double.doubleToLongBits(checkSum(dArr)));

    System.out.println("sFld = " + sFld);
}
}
