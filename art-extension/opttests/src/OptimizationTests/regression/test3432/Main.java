/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Android Runtime Fuzzer tool (4.1.002). Wed Mar  2 15:59:49 2016
// srand = 188704945186092425238781812008057383111

package OptimizationTests.regression.test3432;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=11L;
    public static byte byArrFld[]=new byte[N];

    static {
        init(Main.byArrFld, (byte)-55);
    }

public static void main(String[] strArr) {

    int i=55, i1=0, i2=205, i3=23263, i4=221, i5=-6, iArr[]=new int[N];
    double d=0.65193;
    float f=2.178F, f1=-1.638F;
    byte by=-76;
    boolean b=false;
    short s=-11855;
    long lArr[]=new long[N];

    init(iArr, -5);
    init(lArr, -38L);

    for (i = 5; i < 94; i += 2) {
        Main.instanceCount -= (iArr[i]--);
        Main.instanceCount = (long)((Main.instanceCount + (i - d)) * i);
        for (i1 = i; i1 < 96; i1++) {
            Main.instanceCount -= ((i1 * (lArr[i1] <<= i1)) / ((-(i1 * -8393L)) | 1));
            i2 = (int)(((i2++) % ((i1 * i1) | 1)) * (f++));
            f -= (float)(((i1 + i) - (by - i)) * d);
            i2 += (i1 - i1);
            b = (((i1 * f) + (++i2)) >= -36.892F);
            iArr[i1 + 1] <<= (i2 = (-53512 + iArr[i]));
            b = (((i2 * i1) != (iArr[i + 1]++)) & (b = (b || b)));
        }
        f += (((i2 - Main.instanceCount) + (i2 + f)) + ((i + i2) * (129 * (213 - i2))));
        if (!b) break;
        i2 += (int)((s--) * (Main.instanceCount * (iArr[i] *= 74)));
        Main.instanceCount += -12187;
    }
    for (f1 = 3; f1 < 76; f1++) {
        i2 += (int)(((f1 * i1) + i2) - f);
    }
    for (i3 = 1; i3 < 95; i3++) {
        for (i4 = i3; i4 < 58; ++i4) {
            i2 *= (int)(iArr[i3] * (-33.365F % ((i1 - i) | 1)));
            if (b) continue;
            i2 += (int)((i2--) >> (-(Main.instanceCount * Main.instanceCount)));
            for (i5 = 2; i5 < 85; ++i5) {
                i2 -= (int)(-((28.562F + Main.byArrFld[i4]) - (i1 + Main.instanceCount)));
                i2 = i5;
            }
        }
    }

    System.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
    System.out.println("i2 f by = " + i2 + "," + Float.floatToIntBits(f) + "," + by);
    System.out.println("b s f1 = " + (b ? 1 : 0) + "," + s + "," + Float.floatToIntBits(f1));
    System.out.println("i3 i4 i5 = " + i3 + "," + i4 + "," + i5);
    System.out.println("iArr lArr = " + checkSum(iArr) + "," + checkSum(lArr));

    System.out.println("Main.instanceCount Main.byArrFld = " + Main.instanceCount + "," + checkSum(Main.byArrFld));
}
}
