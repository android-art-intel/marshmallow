/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.1.004). Sun Dec 22 02:41:41 2013
package OptimizationTests.regression.test160896_2;

import OptimizationTests.regression.shared.*;

class UserDefinedException extends RuntimeException {
    public int field;
}

public class Main extends FuzzerUtils {

    public static final int N = 30;

    public static void main(String[] l) {

        short h7 = -11811, bid = -10827;
        long i = -4362246567604726504L, c[] = new long[N];
        int xn5 = -9542, e = 20515, r = 41271, huw = -26750, z = 44941, lys = 53507, q = -4112, zl = 60279, s = -60175, vqf = -49589, g = -33794, m6k[][] = new int[N][N];
        float lm7 = 33.617F, rk = 124.923F;
        boolean iao = true;

        init(c, 20208215442674852L);
        init(m6k, -57513);

        for (xn5 = 1; xn5 < 15; ++xn5) {
            lm7 -= (((--c[xn5]) + (-33352 * (-31757 * (e * 57310)))) * (c[xn5]++));
        }
        r = 26;
        while (--r > 0) {
            try {
                e = 0;
                m6k[(huw >>> 1) % N][(-29673 >>> 1) % N] = ((-(xn5 & z)) / e);
            } catch (ArithmeticException xw4) {
                for (lys = 1; lys < 6; lys++) {
                    iao = (iao = ((z - lm7) != (e >>> h7)));
                    q = ((-(huw / (xn5 | 1))) - e);
                }
                for (zl = 1; zl < 10; zl++) {
                    i *= (h7++);
                    try {
                        h7 -= (short) s;
                        bid = (short) vqf;
                        s = 0;
                        m6k[zl][zl + 1] = (r / s);
                        s = 0;
                        m6k[zl][zl - 1] = ((z -= (g = -39828)) / s);
                    } catch (ArithmeticException ec) {
                        m6k[zl + 1][zl - 1] -= (int) (e = (int) rk);
                    }
                }
            }
        }

        System.out.println("xn5 lm7 e = " + xn5 + ","
                + Float.floatToIntBits(lm7) + "," + e);
        System.out.println("r huw z = " + r + "," + huw + "," + z);
        System.out.println("lys iao h7 = " + lys + "," + iao + "," + h7);
        System.out.println("q zl i = " + q + "," + zl + "," + i);
        System.out.println("s bid vqf = " + s + "," + bid + "," + vqf);
        System.out.println("g rk c = " + g + "," + Float.floatToIntBits(rk)
                + "," + checkSum(c));
        System.out.println("m6k = " + checkSum(m6k));

    }
}
