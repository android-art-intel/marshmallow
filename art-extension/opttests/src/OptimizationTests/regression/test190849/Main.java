/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.2.001). Sun Apr 27 01:12:42 2014
package OptimizationTests.regression.test190849;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

public static final int N = 10000;

    public static byte o=117, ip=-52;
    public static int v=59676;

public static void main(String[] ht) {

    byte p=-116;
    long i=1200521265356680682L, l=-3787675094246604604L, k=-3764628322633372760L, d=5034302741077665674L, vz[]=new
        long[N], cpd[]=new long[N];
    float lcq=82.212F, t=71.1012F, i2x[]=new float[N];
    double z=-91.264;
    int ce=-51451, c7=-27019, h=14162, te=13404, jpg=-16057, qx=45335, n=43528, e=36387, vaz=-24210, kl=33530, b=44310,
        ei=-11086, xmj=59129, l5[]=new int[N];

    init(l5, -9607);
    init(i2x, -2.732F);
    init(vz, 8287921395077717988L);
    init(cpd, -5941555445637577528L);

    for (ce = 8760; ce > 21; ce--) {
        c7 /= (int)((long)((-(c7 - h)) - (c7 - (i - z))) | 1);
        l5[ce - 1] *= (int)(i2x[ce + 1] % ((++p) | 1));
    }
    for (te = 13; te < 7860; ++te) {
        h <<= (int)i;
        l5[(jpg >>> 1) % N] = (int)(((l *= ce) + (k - -35578)) * ((te + lcq) * -1542248699230609860L));
    }
    switch (((((int)(jpg * i)) >>> 1) % 2) + 54) {
    case 54:
        for (v = 9180; v > 23; v -= 1) {
            jpg >>>= o;
            for (qx = 1; qx < v; ++qx) {
                c7 = (int)i;
                vz[v + 1] += (long)((-(lcq * l)) + ((c7 * n) / ((-3281031553920351919L - n) | 1)));
                l5[qx - 1] ^= (int)((e--) + d);
                cpd[v + 1] = (long)((te * (vaz + kl)) % ((long)(-(t - -65186)) | 1));
                b = (--ei);
            }
        }
    case 55:
        xmj = (++ip);
        break;
    default:
        d <<= e;
    }

    System.out.println("ce c7 h = " + ce + "," + c7 + "," + h);
    System.out.println("i z p = " + i + "," + Double.doubleToLongBits(z) + "," + p);
    System.out.println("te jpg l = " + te + "," + jpg + "," + l);
    System.out.println("k lcq qx = " + k + "," + Float.floatToIntBits(lcq) + "," + qx);
    System.out.println("n e d = " + n + "," + e + "," + d);
    System.out.println("vaz kl t = " + vaz + "," + kl + "," + Float.floatToIntBits(t));
    System.out.println("b ei xmj = " + b + "," + ei + "," + xmj);
    System.out.println("l5 i2x vz = " + checkSum(l5) + "," + Double.doubleToLongBits(checkSum(i2x)) + "," +
        checkSum(vz));
    System.out.println("cpd = " + checkSum(cpd));
    
    System.out.println("v o ip = " + v + "," + o + "," + ip);
}
}
