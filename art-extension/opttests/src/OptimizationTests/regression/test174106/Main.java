/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (2.1.003). Sun Feb 23 07:02:22 2014
package OptimizationTests.regression.test174106;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 30;

    public static long zbd_check_sum = 0;

    public static int zbd() {

        long oz[][] = new long[N][N];
        short h[][] = new short[N][N];
        int ckg = 6092, t = -28928, x = -52604, sv = -65430, bh = -56262, we = 8314, en2 = 1772, qes = 57089, ns = -42575, to = -28164, c2r[] = new int[N];
        char n1[] = new char[N];

        init(h, (short) 15926);
        init(n1, (char) 4596);
        init(c2r, 3035);
        init(oz, 5850668945814959610L);

        for (ckg = 1; ckg < 26; ckg++) {
            for (t = 30; t > 1; t--) {
                for (x = 1; x < 60; ++x) {
                    for (sv = 0; sv > 1; sv--) {
                        h[sv + 1][ckg - 1] = (short) (++bh);
                    }
                }
                for (we = 1; we < 30; ++we) {
                    en2 = (int) ((h[ckg][ckg - 1]) * 55939);
                    n1[we] -= (char) (n1[we]);
                }
            }
            for (qes = 30; qes > 1; qes--) {
                for (ns = 1; ns < 6; ++ns) {
                    en2 += (int) ((ckg - (t + (t))) * ckg);
                }
            }
        }

        long meth_res = ckg + t + x + sv + bh + we + en2 + qes + ns + to
                + checkSum(h) + checkSum(n1) + checkSum(c2r) + checkSum(oz);
        zbd_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] g3) {

        short ac[] = new short[N];
        long i0[][] = new long[N][N], rq[][] = new long[N][N], li[][] = new long[N][N];
        int ds = 25057, drl = 38657, pok = 59632, m = -60520, gj = -56581, usu = -41152, s6r = 22429, px[] = new int[N], t[] = new int[N];
        char bog = 51472;

        init(px, -44258);
        init(i0, -4201377403376956366L);
        init(rq, -2823404543604091444L);
        init(ac, (short) 85);
        init(li, 2425097878784202065L);
        init(t, 4554);

        for (ds = 1; ds < 7; ++ds) {
            for (drl = 1; drl < 9; drl++) {
                bog = (char) (px[drl + 1]);
                bog -= (char) (i0[ds][ds - 1]);
            }
            pok += (int) (zbd());
        }

        System.out.println("pok: " + pok);
        System.out.println("zbd_check_sum: " + zbd_check_sum);
    }
}
