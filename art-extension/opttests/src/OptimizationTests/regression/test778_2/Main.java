/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.4.001). Sun Nov  9 08:26:47 2014
package OptimizationTests.regression.test778_2;

import OptimizationTests.regression.shared.*;

class UserDefinedException extends RuntimeException {
    public int field;
}

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static long uz = -2168285205830987853L;

    public static long ag_check_sum = 0;

    public static int ag(long pc5, int h) {

        boolean lvi = false;
        double zt7 = 87.131;
        long wy = -8275391529091224518L;
        int c = -29804, t9p = -63654;
        short tz = 24549;
        byte i = -76;
        float r = 109.718F, w1[] = new float[N];

        init(w1, -119.256F);

        try {
            if ((-((w1[(c >>> 1) % N] *= t9p) + pc5)) > ((h = (h--)) * tz)) {
                for (c = 1; c < 88; c++) {
                    zt7 = uz;
                    if (lvi != (((r * h) - (pc5 - zt7)) <= (c + (41185 * uz))))
                        continue;
                    switch (((c % 1) * 5) + 116) {
                    case 121:
                        try {
                            for (t9p = 86; t9p > c; t9p -= 2) {
                                r *= (--i);
                            }
                            h *= (--h);
                        } catch (NullPointerException v) {
                            h += (((c * c) + tz) - wy);
                            h = (h++);
                        } finally {
                            h -= (int) ((long) ((c + pc5) - (r * tz)) >>> uz);
                        }
                        break;
                    }
                }
            }
        } catch (UserDefinedException rw) {
            h >>= (int) (zt7 * (h + (--zt7)));
        } catch (ArrayIndexOutOfBoundsException yp) {
        } finally {
            zt7 *= (((zt7 + t9p) + c) * 45559);
        }
        long meth_res = pc5 + h + c + Double.doubleToLongBits(zt7)
                + (lvi ? 1 : 0) + Float.floatToIntBits(r) + t9p + i + tz + wy
                + Double.doubleToLongBits(checkSum(w1));
        ag_check_sum += meth_res;
        return (int) meth_res;
    }

    public static void main(String[] w1r) {

        double b = 5.679;
        int d = -41937, u = -49812, s0t = -26030, s = -21882, o0s = -12645, tws = 49697, va = -18244, n2r[] = new int[N];
        short mk = -29748;
        byte kg = -63;
        float pd = -16.555F;

        init(n2r, 51682);

        for (d = 76; d > 3; --d) {
            u -= (((u--) + (d + kg)) + (u * u));
            pd -= 51;
            u -= (int) (-35.477F * ((u * d) >>> (long) (mk * -116.901F)));
            u += (int) (--uz);
            u += (int) ((pd -= (-42044 * (pd + pd))) + (u -= (u + d)));
            uz = d;
            u -= (++u);
            try {
                u -= (int) ((--u) - (pd - (u = (int) uz)));
                for (s0t = 1; s0t < d; s0t++) {
                    try {
                        uz = ((u--) + (-(-(s0t + s0t))));
                        uz ^= (long) ((uz << n2r[s0t]) * ((s + u) + (s *= (int) b)));
                        uz >>= (uz = (-(d - s)));
                    } catch (ArrayIndexOutOfBoundsException cv) {
                        for (o0s = d; o0s < 5; o0s++) {
                            s += (s--);
                            s *= (s += ((s0t + 26399) - n2r[d - 1]));
                            pd = (uz + s0t);
                            kg /= (byte) (((-(uz >>= s0t)) * (--s)) | 1);
                            s -= (-s);
                            tws <<= (int) (((24881 - (pd + o0s)) + (-uz)) + uz);
                        }
                        for (va = 1; va < 70; ++va) {
                            s = (int) (s0t * b);
                            u += (va * va);
                        }
                    }
                }
            } catch (NegativeArraySizeException jcz) {
                tws += d;
            } catch (ArrayIndexOutOfBoundsException l) {
                u *= (int) (ag(2162309076626130469L, --s) * (pd - n2r[d - 1]));
            }
        }

        System.out.println("d u kg = " + d + "," + u + "," + kg);
        System.out.println("pd mk s0t = " + Float.floatToIntBits(pd) + "," + mk
                + "," + s0t);
        System.out.println("s b o0s = " + s + "," + Double.doubleToLongBits(b)
                + "," + o0s);
        System.out.println("tws va n2r = " + tws + "," + va + ","
                + checkSum(n2r));

        System.out.println("uz = " + uz);

        System.out.println("ag_check_sum: " + ag_check_sum);
    }
}
