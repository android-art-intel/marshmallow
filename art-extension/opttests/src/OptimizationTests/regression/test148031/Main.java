/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.1.001). Mon Oct 28 03:27:55 2013

package OptimizationTests.regression.test148031;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 50000;

    public static void main(String[] zj) {

        int e9 = 1086, w = -27387, w7 = -14829, jra = 502, x76 = 10277, qwa = 43067, p = 2773, uj[] = new int[N], myr[] = new int[N];
        byte k = -21, d3 = 0;
        double c4p = 68.19;
        long wvl = 5057257054782220108L, qa = 5328668153761522630L, y1[] = new long[N];
        float bv = 37.698F;

        init(uj, 38270);
        init(y1, -8429289750146384424L);
        init(myr, 50811);

        for (e9 = 1; e9 < 9; ++e9) {
            w += w;
        }
//        for (w7 = 1; w7 < 9; w7++) {
//            c4p = 9;
        for (w7 = 1; w7 < 20000; w7++) {
            c4p = 900;
            do {
                k -= (byte) ((-(e9 - bv)) - w);
                w = (++uj[w7]);
            } while (--c4p > 0);
            w += (int) ((w -= (int) 8667478741677770043L) << w7);
            y1[w7] += -37387;
            jra = 700;
            do {
                w += (int) (((1620542006852241138L - (w * d3)) - (w7 + wvl)) + qa);
                // Test integer division optimization
                try {
                    x76 = (w / 49);
                    w = (w % jra);
                    myr[w7 + 1] = (x76 % w7);
                } catch (ArithmeticException a_e) {
                }
            } while (--jra > 0);
            qwa += (--w);
        }
        p = 15000;
        do {
            w -= d3;
            bv += (float) c4p;
        } while (--p > 0);

        System.out.println("int: " + e9 + "," + w + "," + w7 + "," + jra + ","
                + x76 + "," + qwa + "," + p + "," + checkSum(uj) + ","
                + checkSum(myr));
        System.out.println("byte: " + k + "," + d3);
        System.out.println("double: " + c4p);
        System.out.println("long: " + wvl + "," + qa + "," + checkSum(y1));
        System.out.println("float: " + bv);

    }
}
