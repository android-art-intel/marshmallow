/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (2.1.003). Mon Jul  8 18:21:38 2013
package OptimizationTests.regression.test121979;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 50;

    public static void main(String[] ar4) {

        int hc = -4074, o3 = -48743, e09 = 5854, s3n = -43394, o = 43799, ckq = -32080, c = 31587, hlc = -9178, w = 61202, dc = 16238, po = -58523, r8p = -49419, y2 = 33153, x = 27020, kof = -47940, m3m = 30636, db = -27437, ky2 = 11543, r = 23072, v7 = -42921, ib[][] = new int[N][N], d[][] = new int[N][N], vg[][] = new int[N][N], h8[] = new int[N], u[] = new int[N], ni[] = new int[N], xy[] = new int[N], x8[] = new int[N], hs[] = new int[N], n[] = new int[N], gqo[] = new int[N], e[] = new int[N], ap[] = new int[N];
        long h[] = new long[N], p[] = new long[N], p9[] = new long[N], gyu[][] = new long[N][N], i[] = new long[N], hh[] = new long[N], ded[] = new long[N];

        init(ib, 32679);
        init(d, -45524);
        init(vg, -5061);
        init(h8, -5455);
        init(p, -7624262311299246178L);
        init(p9, -6886719425034993219L);
        init(u, -30309);
        init(ni, 31903);
        init(xy, 18195);
        init(x8, -59045);
        init(hs, -3818);
        init(n, -20150);
        init(gqo, -26509);
        init(e, -20097);
        init(ap, -39315);

        for (hc = 1; hc < 9; hc++) {
            ib[hc + 1][hc - 1] -= (int) (ib[hc - 1][hc - 1]);
            o3 -= (int) (((o3 + (d[hc][hc - 1])) - ((vg[hc][hc + 1]) + o3)) + o3);
            o3 -= (int) (vg[hc][hc]);

            try {
                o3 = (int) (-4419 % ib[hc - 1][hc]);
                e09 = (int) (e09 / 60515);
                s3n = (int) (e09 / 254);
                p[hc - 1] = (long) (h8[hc] / o);
                ckq = (int) (p9[hc + 1] / vg[hc - 1][hc - 1]);
            } catch (ArithmeticException a_e) {
            }

        }

        System.out.println("int: " + hc + "," + o3 + "," + e09 + "," + s3n
                + "," + o + "," + ckq + "," + c + "," + hlc + "," + w + ","
                + dc + "," + po + "," + r8p + "," + y2 + "," + x + "," + kof
                + "," + m3m + "," + db + "," + ky2 + "," + r + "," + v7 + ","
                + checkSum(ib) + "," + checkSum(d) + "," + checkSum(vg) + ","
                + checkSum(h8) + "," + checkSum(u) + "," + checkSum(ni) + ","
                + checkSum(xy) + "," + checkSum(x8) + "," + checkSum(hs) + ","
                + checkSum(n) + "," + checkSum(gqo) + "," + checkSum(e) + ","
                + checkSum(ap));
        System.out.println("long: " + checkSum(h) + "," + checkSum(p) + ","
                + checkSum(p9) + "," + checkSum(gyu) + "," + checkSum(i) + ","
                + checkSum(hh) + "," + checkSum(ded));
    }
}
