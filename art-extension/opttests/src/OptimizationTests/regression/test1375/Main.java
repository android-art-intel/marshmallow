/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.5.001). Sat Jan 31 03:06:33 2015
package OptimizationTests.regression.test1375;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static int iFld=-14808, iArrFld[]=new int[N];

    static {
        init(iArrFld, -34);
    }

public static void main(String[] strArr) {

    boolean b=true;
    short s=-18142, s1=-14786;
    double d=114.62611;
    float f=-2.147F;
    int i=9152, i1=57629, i2=-34074, i3=-3, i4=48722, i5=10;
    byte by=-67;
    long l=-144070102L;

    for (i = 5; i < 92; ++i) {
        iFld = (int)((++iFld) * (l++));
        for (i1 = 1; i1 < i; i1++) {
            iFld /= (int)((long)(i + ((l + d) - (i * i))) | 1);
            for (i2 = 1; i2 < 46; ++i2) {
                b = (b = ((f - iFld) != i1));
                iFld = i1;
                l = (long)(iFld - ((i1 - 1.201F) + (i3 - iFld)));
                iFld = i3;
                iFld += (int)(f--);
            }
            f += i2;
            s += (short)(l++);
            for (i4 = 5; i4 > 1; i4 -= 3) {
                i3 = (int)(((i2 - -3) + (f - iFld)) - ((iFld - 64) ^ (--i5)));
                l <<= (iArrFld[i1] = (int)((9 * (i2 + -6L)) * (i - l)));
                iFld += (int)94L;
                iFld = (int)d;
                l += (((i4 * i) + s) - i2);
                try {
                    i3 = (-472156370 % i1);
                    i5 = (-245 % iArrFld[i1 - 1]);
                    i3 = (41087 / iFld);
                } catch (ArithmeticException a_e) {}
                i5 -= (int)105.513F;
                l = i2;
            }
            l *= (long)(iFld * ((i1 - f) * (d--)));
            i5 -= (int)((i5 * (-2.647F + (s1 = (short)l))) * (--l));
            i5 += (204 + (i1 * i1));
        }
        by <<= (byte)(((by + i4) + -52205L) - i3);
    }

    System.out.println("i l i1 = " + i + "," + l + "," + i1);
    System.out.println("d i2 b = " + Double.doubleToLongBits(d) + "," + i2 + "," + (b ? 1 : 0));
    System.out.println("f i3 s = " + Float.floatToIntBits(f) + "," + i3 + "," + s);
    System.out.println("i4 i5 s1 = " + i4 + "," + i5 + "," + s1);
    System.out.println("by = " + by);

    System.out.println("iFld iArrFld = " + iFld + "," + checkSum(iArrFld));
}
}
