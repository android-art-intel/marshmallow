/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.5.001). Fri Feb  6 22:34:45 2015
package OptimizationTests.regression.test1459_2;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static int iFld=8, iArrFld[]=new int[N];

    public static boolean bb = true;

    static {
        init(iArrFld, -39992);
    }

public static void main(String[] strArr) {

    int i=185, i2=-12;
    long lArr[]=new long[N];
    float f1=1.390F;

    init(lArr, -3295371271137177365L);

        for (long l : lArr) {
            if (bb) {
                iArrFld[(i >>> 1) % N] = -20216;
                l = (i = (int)((i * l)));
                iArrFld[27] = (int)l;
            } else {
                for (iFld = 3; iFld < 79; iFld++) {
                    for (i2 = 6; i2 < 98; i2++) {
                        Float.intBitsToFloat(33);
                    }
                    f1 = (lArr[iFld - 1]--);
                }
            }
        }

    System.out.println("i = " + i);
    System.out.println("i2 = " + i2);
    System.out.println("f1 lArr = " + Float.floatToIntBits(f1) + "," + checkSum(lArr));

    System.out.println("iFld iArrFld = " + iFld + "," + checkSum(iArrFld));

}
}
