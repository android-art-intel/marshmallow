/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (2.1.003). Mon Dec 16 05:45:51 2013
package OptimizationTests.regression.test159541;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 30;

    public static long bc6_check_sum = 0;
    static int statIntField = 3;

    static void statSet(int value) {
        statIntField = value;
    }

    static int statGet() {
        return statIntField;
    }

    public static void bc6(int l, byte rz4, int qwx, int p, int n0) {

        char sxc = 26736;
        int tyr = -18708, kd = -2679, owz = 10112, hjs = -58382;
        long u8[] = new long[N];

        init(u8, 4480638289903445671L);

        int i = 11;
        while (--i > 0) {
            for (long ec6 : u8) {
                for (tyr = 4; tyr > 1; tyr--) {
                    sxc *= (char) (u8[tyr + 1]);
                }
                for (kd = 1; kd < 20; ++kd) {
                    statSet((int) (--owz));
                    hjs -= (int) (-((-38442 + p) % -5241888521489687341L));
                }
            }
        }
        bc6_check_sum += l + rz4 + qwx + p + n0 + tyr + sxc + kd + owz + hjs
                + checkSum(u8);
    }

    public static void main(String[] o) {

        char ruz[][] = new char[N][N];
        int w5u = -10667, ttb = -47594, h = 31764, d = 43034, r = -32563, bkt = 31650, u = -35370, vph = -6908, et = -16280, avc = 13922, uv = -26162, k0z = -55200, xq8 = -33878, rlm[] = new int[N], w[] = new int[N], yf7[][] = new int[N][N], cj[][] = new int[N][N], i8[] = new int[N], n[][] = new int[N][N];
        long g[] = new long[N], oz[] = new long[N], isw[] = new long[N];

        int tyr = -18708, kd = -2679, owz = 10112, hjs = -58382, p = 30000;

        init(rlm, 28529);
        init(w, 42794);
        init(g, -2506547977257305435L);
        init(yf7, -40597);
        init(cj, -61196);
        init(ruz, (char) 61928);
        init(oz, 3757335369080315651L);
        init(i8, -31517);
        init(isw, -3848096313957377718L);
        init(n, 38428);

        for (w5u = 22; w5u > 1; --w5u) {
            for (ttb = 7; ttb > w5u; ttb--) {
                rlm[w5u + 1] += (int) (-31584 + (((w5u) + ttb) + ttb));
            }
        }

        bc6((int) (rlm[6]),
                (byte) (w[20]),
                (int) (w5u + w5u),
                (int) (((w[0]) % (((-45036) * ttb != 0) ? (-45036) * ttb : 1)) - w5u),
                (int) (g[24]));

        if (statIntField == 4412) {
            System.out.println("TEST PASSED");
        } else {
            System.out.println("TEST FAILED: expected statIntField = 4412; actual statIntField = "
                            + statIntField);
        }
    }
}
