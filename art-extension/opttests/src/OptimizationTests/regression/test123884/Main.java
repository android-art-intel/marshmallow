/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (2.1.003). Tue Jul 16 03:36:29 2013
package OptimizationTests.regression.test123884;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 30;

    public static long z14_check_sum = 0;

    public static int z14(int tl, int k, long yh4, int h) {

        int xn4 = -48958, mhq = 17115, r = -3597, z5l = -54642, vu1 = -30229, o87[] = new int[N], d[][] = new int[N][N], j0[][] = new int[N][N], tpf[][] = new int[N][N], d2[][] = new int[N][N], irv[] = new int[N], hu[][] = new int[N][N], xza[] = new int[N], u2r[][] = new int[N][N], mtk[][] = new int[N][N];
        long zi6 = 1646582419136866440L, ru = 1940500289137895881L, wn[] = new long[N];

        init(wn, 3926524350588736717L);
        init(o87, 38083);

        for (xn4 = 11; xn4 > 1; --xn4) {
            wn[xn4] = (long) (44685);
            o87[xn4 - 1] = (int) (12365);
        }

        int v7o = 11;
        do {
            for (int w3p : o87) {
                for (mhq = 17; mhq > 1; --mhq) {
                    if (zi6 > 0) {
                        return (int) (tl + k + yh4 + h + xn4 + mhq + zi6
                                + checkSum(wn) + checkSum(o87));
                    }
                }
            }
        } while (--v7o > 0);

        return 0;
    }

    public static void main(String[] i) {

        int c = -33057, q = -29733, gjg = 64132, b = -32773, h = -55310, s7y = 23160, uy = -21276, euu = 24202, ybu = 56287, q17 = -17275, e7 = 62861, k = 58873, a9t = 60006, rg = 7681, l[] = new int[N], cxc[][] = new int[N][N], j7[] = new int[N], p87[] = new int[N], kg0[] = new int[N], k6s[][] = new int[N][N], bt[][] = new int[N][N], g[][] = new int[N][N];
        byte x = -37;
        long f = 8383921993741990808L, eq1 = 5333903780427601600L, bi[] = new long[N], qjy[] = new long[N];

        init(l, 45492);
        init(cxc, 9483);
        init(j7, -51621);
        init(p87, 507);
        init(kg0, -46028);
        init(bi, 6127069243656824949L);
        init(k6s, 26284);
        init(qjy, 1539405307572742310L);
        init(bt, 52227);
        init(g, 28444);

        c = (int) (--q);
        int obi = 11;
        while (--obi > 0) {
            for (gjg = 1; gjg < 5; ++gjg) {
                for (b = 1; b < 12; ++b) {
                    q = (int) (l[b]);
                    try {
                        l[b] = (int) (h % cxc[b + 1][gjg]);
                        s7y = (int) (l[b + 1] / -54033);
                        l[b] = (int) (999586815 % q);
                        cxc[gjg][gjg] = (int) (s7y / f);
                        h = (int) (c / q);
                    } catch (ArithmeticException a_e) {
                    }

                    c -= (int) (gjg + ((z14((int) (j7[b - 1]),
                            (int) (p87[b + 1]), (long) (kg0[b - 1]),
                            (int) (gjg))) * (++uy)));
                }
                for (euu = 1; euu < 12; euu++) {
                    p87[euu] -= (int) (((bi[gjg]) * 3) % ((kg0[gjg + 1] != 0) ? kg0[gjg + 1]
                            : 1));
                    j7[gjg - 1] -= (int) (kg0[gjg]);
                    j7[euu] += (int) ((p87[gjg - 1]) / 31429);
                }
            }
        }

        int rpk = 11;
        do {
            for (k = 1; k < 6; k++) {
                try {
                    qjy[k - 1] = (long) (a9t / k6s[k - 1][k - 1]);
                    eq1 = (long) (qjy[k - 1] / h);
                    eq1 = (long) (q % q);
                    g[k][k - 1] = (int) (bt[k][k - 1] % h);
                    x = (byte) (rg % 15407);
                } catch (ArithmeticException a_e) {
                }
            }
        } while (--rpk > 0);

        System.out.println("int: " + q + "," + h + "," + checkSum(l) + ","
                + checkSum(g));
        System.out.println("byte: " + x);
    }
}
