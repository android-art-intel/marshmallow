/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Android Runtime Fuzzer tool (4.1.002). Sun Mar 20 21:17:37 2016
// srand = 210346336799374287828435734175867625171

package OptimizationTests.regression.test3591_1;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=162562110L;
    public static long lArrFld[]=new long[N];

    static {
        init(Main.lArrFld, 9L);
    }

public static void main(String[] strArr) {

    int i=99, i1=11, i2=11, i3=138, iArr[]=new int[N];
    float f=1.548F;
    byte by=50;
    double d=14.114355;

    init(iArr, -22562);

    for (i = 2; i < 84; i++) {
        for (i1 = 1; i1 < 6; i1++) {
            Main.lArrFld[i] >>= (Main.instanceCount++);
            i2 >>= i2;
            i2 >>= (int)((f--) * i);
            f = (f--);
            for (i3 = i; i3 < 93; i3++) {
                i2 = (i2--);
                i2 -= (int)((iArr[i + 1]++) + (-(i3 + Main.instanceCount)));
                f = iArr[i1 + 1];
                i2 <<= ((++i2) * (-(i2 -= i)));
                Main.instanceCount = 3625;
                i2 >>= (5225 - ((i1 + -17103) * (++i2)));
                i2 = (int)(((f - 13.751F) - Main.instanceCount) - i2);
                iArr[i] = (++i2);
                i2 -= (++i2);
                i2 = (int)Main.instanceCount;
            }
            i2 = -6;
        }
        i2 = (int)((i2--) + ((i2 = i2) + -14L));
        f *= i2;
        i2 += (i * i1);
        i2 = (-(i2 = (iArr[i]--)));
        if ((-(--iArr[i - 1])) > (i2 += (-(-i)))) continue;
        Main.instanceCount += (i + by);
        f = (float)((-(-(2574 + (d * i2)))) + ((iArr[i + 1]++) - (Main.instanceCount = Main.instanceCount)));
    }

    System.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
    System.out.println("f i3 by = " + Float.floatToIntBits(f) + "," + i3 + "," + by);
    System.out.println("d iArr = " + Double.doubleToLongBits(d) + "," + checkSum(iArr));

    System.out.println("Main.instanceCount Main.lArrFld = " + Main.instanceCount + "," + checkSum(Main.lArrFld));
}
}
