/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.1.005). Fri Jan  3 03:03:44 2014
package OptimizationTests.regression.test162412;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 3000;

    public static void main(String[] qka) {

        long n = -6275413089823917404L, fb = 6876767426876390925L, o = 4199756943262863933L;
        short pw4 = 14688;
        int gu = -60276, r = -1, xl2 = 5, mqq = -60974, vn = 18054, mz0 = -51480, h = -10611, kl4 = -40032, c5w = -18736, fwz = 13096, kov = -43491, bf = -29474, e[] = new int[N], jar[] = new int[N];
        double t = -117.647;
        byte zfe = -116;
        float b = -100.571F, ofw[] = new float[N];

        init(e, 15336);
        init(ofw, -89.626F);
        init(jar, 59980);

        for (int i : e) {
            for (gu = 1; gu < 114; gu++) {
                r += 2;
                r *= -3;
            }
            n *= (long) ofw[(i >>> 1) % N];
            r -= (-xl2);
            jar[(mqq >>> 1) % N] -= (-jar[(vn >>> 1) % N]);
            fb *= (++zfe);
        }

        if ((r == 829503991) && (n == 0)) {
            System.out.println("TEST PASSED");
        } else {
            System.out
                    .println("TEST FAILED: expected r = 829503991; expected n = 0");
            System.out.println("             actual   r = " + r + "; actual n = "
                    + n);
        }
    }
}
