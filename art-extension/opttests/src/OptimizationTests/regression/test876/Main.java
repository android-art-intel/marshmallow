/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.4.001). Thu Sep  4 03:44:00 2014
package OptimizationTests.regression.test876;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static float w=-91.247F;
    public static long z=-7443045522042825767L;

public static void main(String[] x) {

    boolean bhz=false;
    float b=114.618F, j=-67.605F;
    int e=23905, aq6=8768, q=7333, wl9[]=new int[N];
    short h=3622;
    long dkp[]=new long[N];
    double to=28.87, y97[][]=new double[N][N];

    init(dkp, 1908477751544378038L);
    init(y97, 53.774);
    init(wl9, -50803);

    for (e = 76; e > 1; e -= 3) {
        for (b = e; b < 86; b++) {
            aq6 <<= (aq6++);
            dkp[(int)(b)] = (aq6++);
            j = 1;
            do {
                aq6 = (int)((aq6--) * ((aq6 - z) * (aq6++)));
                aq6 += (int)(y97[(int)(b - 1)][e] = (-(aq6 - 94)));
                aq6 = (int)(((--aq6) + to) + (aq6--));
                aq6 -= (int)(z - z);
                if (-12482 == z) break;
                w *= (j + (--z));
                wl9[(int)(j + 1)] = (int)(z = z);
                bhz = ((aq6 != -17098) | bhz);
                w -= (float)to;
            } while (++j < 66);
            aq6 = (--aq6);
        }

        for (q = 1; q < e; ++q) {
            aq6 += (-((wl9[e + 1] += e) - (q * h)));
            aq6 >>= (aq6++);
            wl9[q - 1] <<= e;
            z += ((long)q | (long)q);
            h = (short)wl9[e];
            aq6 -= (int)(43 - (e + (z--)));
            aq6 += (e - e);
            to += (((++aq6) + (q - z)) - ((e - q) / ((3139 + (-(aq6++))) | 1)));
            h += (short)q;
        }
    }

    System.out.println("e b aq6 = " + e + "," + Float.floatToIntBits(b) + "," + aq6);
    System.out.println("j to bhz = " + Float.floatToIntBits(j) + "," + Double.doubleToLongBits(to) + "," + (bhz ? 1 :
        0));
    System.out.println("q h dkp = " + q + "," + h + "," + checkSum(dkp));
}
}
