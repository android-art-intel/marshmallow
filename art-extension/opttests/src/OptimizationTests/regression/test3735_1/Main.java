/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Android Runtime Fuzzer tool (4.1.002). Sat Apr  2 14:52:17 2016
// srand = 51105105771624939076444176113899742995

package OptimizationTests.regression.test3735_1;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=39617L;
    public static float fFld=1.1016F;
    public static double dFld=68.98670;

public static void main(String[] strArr) {

    int i=-7, i1=2, i2=24989, i3=-220, i5=47399, iArr[]=new int[N];
    double d=-27.45114;
    long l=242L;
    short s=-10805;
    byte byArr[]=new byte[N];

    init(byArr, (byte)79);
    init(iArr, 6);

    for (i = 1; i < 92; i++) {
        d = 1;
        while (++d < 91) {
            for (i1 = 1; i1 < d; i1++) {
                i2 -= (i2 = (i2--));
                i2 -= (int)d;
                i2 = i2;
                i2 += (i1 * Main.instanceCount);
                byArr[i] = (byte)((++Main.instanceCount) * (-Math.min(i, i1)));
                i2 *= (int)((-(i1 - Main.instanceCount)) + (i1 * i1));
            }
            i2 = (int)((-(Main.fFld += i)) * (--l));
        }
        for (i3 = 1; i3 < i; i3++) {
            int i4=11;
            i4 += (i4--);
            i4 += (i3 * i3);
            i2 -= (int)(-Main.fFld);
            i2 >>>= (-(53 - (i4 - -7580)));
            for (i5 = 1; i5 < 43; i5++) {
                iArr[i - 1] = i;
                i2 = (int)-67L;
                l += (long)((iArr[i5 - 1]--) - ((i - i4) - (i2 / ((long)(Main.fFld) | 1))));
                Main.dFld += ((i * (i2 - -510022957L)) - ((++i4) + Main.fFld));
                i2 += (int)l;
                iArr[i3 + 1] += (i + iArr[i]);
                i2 += i2;
                l -= s;
                i2 += (i5 * i5);
            }
        }
    }

    System.out.println("i d i1 = " + i + "," + Double.doubleToLongBits(d) + "," + i1);
    System.out.println("i2 l i3 = " + i2 + "," + l + "," + i3);
    System.out.println("i5 s byArr = " + i5 + "," + s + "," + checkSum(byArr));
    System.out.println("iArr = " + checkSum(iArr));

    System.out.println("Main.instanceCount Main.fFld Main.dFld = " + Main.instanceCount + "," +
        Float.floatToIntBits(Main.fFld) + "," + Double.doubleToLongBits(Main.dFld));
}
}
