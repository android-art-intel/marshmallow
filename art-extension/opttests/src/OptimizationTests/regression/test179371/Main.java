/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.2.001). Sun Mar 16 02:10:07 2014
package OptimizationTests.regression.test179371;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 500;

    public static void main(String[] h) {

        byte j = 95;
        long e = -1189370624916323833L, q8o = 5778348904225695617L, g = 6921176303869524035L;
        int wgz = 248, alb = -13398, il = -52581, k6o = -54156, yzd = 3635, uo = -45458, t3i = -57697, h4 = -34793, t[] = new int[N], cx7[] = new int[N];

        init(t, -57459);
        init(cx7, -58070);

        for (int br : t) {
            wgz = 401;
            do {
                for (alb = 21; alb < 474; alb++) {
                    il += alb;
                    k6o += k6o;
                }
                k6o ^= (yzd--);
                e <<= br;
                yzd -= (uo + wgz);
            } while (--wgz > 0);
            uo = (int) (-((e + wgz) + (j - -4774792275431259515L)));
        }
        for (t3i = 23; t3i < 450; ++t3i) {
            q8o *= (q8o * g);
            t[t3i + 1] = t3i;
        }
        for (int cpw : t) {
            il = (int) -61.339;
            uo = (yzd / (cx7[(h4 >>> 1) % N] | 1));
        }

        System.out.println("wgz alb il = " + wgz + "," + alb + "," + il);
        System.out.println("k6o yzd e = " + k6o + "," + yzd + "," + e);
        System.out.println("uo j t3i = " + uo + "," + j + "," + t3i);
        System.out.println("q8o g h4 = " + q8o + "," + g + "," + h4);
        System.out.println("t cx7 = " + checkSum(t) + "," + checkSum(cx7));

    }
}
