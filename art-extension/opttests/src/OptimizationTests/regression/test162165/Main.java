/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.1.005). Thu Jan  2 06:47:35 2014
package OptimizationTests.regression.test162165;

import OptimizationTests.regression.shared.*;

class UserDefinedException extends RuntimeException {
    public int field;
}

public class Main extends FuzzerUtils {

    public static final int N = 300;

    public static void main(String[] j) {

        double wi = -106.329;
        byte n = -21;
        long qpc = -8472895582098084977L, a = 6212158654487917302L, c8 = -3257701656434558366L, dg2[] = new long[N], yam[] = new long[N], xqz[] = new long[N];
        float yr[] = new float[N];
        short ibd = -6671;
        int t35 = -47898, o = -31310, x7 = 41673, l5a = -63310, xu = -59760, aju = -51631, pb = -61577, i = -18851, e7 = 484, em = 64088, u = 13289, x = -24250, g = 25111, aq[] = new int[N], gi[] = new int[N], il[] = new int[N], l3s[] = new int[N];

        init(aq, 14634);
        init(gi, 29410);
        init(dg2, -2667359994191322742L);
        init(yam, 5775709716722950517L);
        init(il, -23451);
        init(yr, -79.456F);
        init(xqz, -5463595297962395718L);
        init(l3s, 48741);

        for (int m4p : aq) {
            try {
                t35 -= (--t35);
                t35 *= gi[(t35 >>> 1) % N];
                t35 *= (-(ibd--));
                for (o = 1; o < 19; o++) {
                    t35 >>= (int) ((dg2[o + 1] * (yam[o - 1]--)) + 41268);
                    qpc *= x7;
                    if (((-((-(il[o - 1] = x7)) - yr[o])) - ((-5157346829652080188L % ((-(++qpc)) | 1)) * (--l5a))) < 65536)
                        throw new UserDefinedException();
                    if (aq[o] <= ((wi + -94.364) - ((++xqz[o - 1]) - (xu--))))
                        break;
                    x7 *= aju;
                }
            } catch (UserDefinedException b) {
                pb -= (int) (((qpc * xu) - n) * ((a * i) & (a - a)));
                if ((c8 = ((t35 / (c8 | 1)) + (x7 ^ a))) >= ((--x) << ((long) (117.960 + (wi - -6176136703834492655L)) >> u))) {
                    il[(xu >>> 1) % N] = (l3s[(pb >>> 1) % N] + (-i));
                    try {
                        xu = (-194 / aq[(-51894 >>> 1) % N]);
                        em = (8961 / e7);
                        e7 = (39471 % u);
                    } catch (ArithmeticException a_e) {
                    }
                }
            } finally {
                yam[(g >>> 1) % N] = x7;
            }
        }

        if ((e7 == 12893) && (em == 0)) {
            System.out.println("TEST PASSED");
        } else {
            System.out
                    .println("TEST FAILED: expected e7 = 12893; expected em = 0");
            System.out.println("             actual e7 = " + e7
                    + "; actual em = " + em);
        }
    }
}
