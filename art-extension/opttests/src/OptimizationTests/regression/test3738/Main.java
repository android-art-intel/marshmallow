/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Android Runtime Fuzzer tool (4.1.002). Sat Apr  2 19:09:13 2016
// srand = 30521342788377451216985129532397056740

package OptimizationTests.regression.test3738;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=-227L;

public static void main(String[] strArr) {

    int i=-1, i1=-4, i2=57537, iArr[]=new int[N];
    double d=-69.19774;
    float f=2.163F;
    boolean bArr[]=new boolean[N];
    short sArr[]=new short[N];

    init(iArr, -101);
    init(bArr, false);
    init(sArr, (short)29746);

    for (i = 1; i < 76; ++i) {
        if (bArr[i]) {
            for (i1 = i; i1 < 37; ++i1) {
                i2 += (i1 ^ i1);
                d = d;
                iArr[i + 1] *= (int)(f - iArr[i + 1]);
                iArr[i1] = (int)Long.reverseBytes((long)((i2--) - (--f)));
                Main.instanceCount = iArr[i + 1];
                i2 -= (int)(f--);
                Main.instanceCount -= iArr[i1 + 1];
                Main.instanceCount >>= (long)(((Main.instanceCount - i2) * (i1 >> Main.instanceCount)) -
                    ((Main.instanceCount - 1.888F) % (((long)(-42 + (d * i2))) | 1)));
                i2 = (int)(((i - Main.instanceCount) * (i1 * i2)) * (iArr[(32817 >>> 1) % N]--));
                iArr[i] = i2;
            }
            i2 = (i2++);
            i2 ^= i;
        } else {
            Main.instanceCount = (sArr[i + 1] + Main.instanceCount);
        }
        i2 -= ((--i2) * -11);
        d -= Main.instanceCount;
        i2 += (i + i2);
    }

    System.out.println("i i1 i2 = " + i + "," + i1 + "," + i2);
    System.out.println("d f iArr = " + Double.doubleToLongBits(d) + "," + Float.floatToIntBits(f) + "," +
        checkSum(iArr));
    System.out.println("bArr sArr = " + checkSum(bArr) + "," + checkSum(sArr));

    System.out.println("Main.instanceCount = " + Main.instanceCount);
}
}
