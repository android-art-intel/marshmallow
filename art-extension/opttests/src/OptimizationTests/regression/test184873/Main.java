/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (2.1.003). Sun Apr  6 00:23:14 2014
package OptimizationTests.regression.test184873;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 30;

    public static long y_check_sum = 0;
    public static long l_check_sum = 0;
    static int statIntField = 3;

    static void statSet(int value) {
        statIntField = value;
    }

    static int statGet() {
        return statIntField;
    }

    public static void y(int ms, int cxd, int j) {

        int u = -62923, y = 2864, q9m[][] = new int[N][N], kl[][] = new int[N][N], xqa[] = new int[N], rel[] = new int[N], cg[][] = new int[N][N], y3b[] = new int[N];
        char a9f = 25436;
        long k = -6164689853143911498L, r[][] = new long[N][N];

        init(q9m, 61908);
        init(kl, 35909);
        init(xqa, -15943);
        init(rel, 6032);
        init(cg, 33554);
        init(y3b, 3278);
        init(r, -2592610064698039410L);

        int cw = 11;
        do {
            for (u = 27; u > 1; u--) {
                q9m[u][u + 1] += (int) (ms);
                y += (int) ((kl[u + 1][u]) * -64028);
                kl[u][u - 1] = (int) (xqa[u]);
                if ((rel[u - 1])
                        - ((j - (kl[u][u + 1])) + ((xqa[u]) + (cg[u + 1][u - 1]))) == 55938 + (cg[u][u])) {
                    try {
                        y3b[u] = (int) (233 / rel[u]);
                        q9m[u - 1][u] = (int) (ms % cxd);
                        j = (int) (k / 7368);
                        r[u][u + 1] = (long) (-162 % a9f);
                        y = (int) (-194 % y3b[u]);
                    } catch (ArithmeticException a_e) {
                    }
                }
            }
        } while (--cw > 0);

        y_check_sum += ms + cxd + j + u + y + k + a9f + checkSum(q9m)
                + checkSum(kl) + checkSum(xqa) + checkSum(rel) + checkSum(cg)
                + checkSum(y3b) + checkSum(r);
    }

    public static void l(int ln) {

        int w4s = 27306, j = -36038, v[][] = new int[N][N], caw[] = new int[N], va[] = new int[N], ip[] = new int[N];
        long s[] = new long[N], d9[] = new long[N];

        init(v, -13207);
        init(caw, -54907);
        init(va, 19717);
        init(ip, -54058);
        init(s, 1379371242662823493L);
        init(d9, 4176002981077103117L);

        for (w4s = 27; w4s > 1; w4s--) {
            if (v[w4s - 1][w4s] > 0) {
                l_check_sum += ln + w4s + checkSum(v);
                return;
            }
            caw[w4s + 1] = 1;
            switch ((int) caw[w4s + 1]) {
            case 1:
            }
        }

        for (j = 1; j < 1; j += 2) {
            va[j] -= (int) ((ip[j]) + 27826);
            s[j - 1] *= (long) (j + (d9[j]));
        }

        l_check_sum += ln + w4s + j + checkSum(v) + checkSum(caw)
                + checkSum(va) + checkSum(ip) + checkSum(s) + checkSum(d9);
    }

    public static void main(String[] pc) {

        short vu6[] = new short[N];
        int ng = 32658, n3 = 14185, lfp = -37674, jpp = 45852, xnv = -32800, ub = -40299, zih = -44223, vo = 27781, h7u = -52382, h3v = -57483, i5b = 21059, ih = -18741, md = -45621, bg = -43498, d = -45203, s9f = -56934, p3k = 61375, ge = -39781, r = -5054, ara = -58558, ar = -35450, g[] = new int[N], e6b[] = new int[N], mk5[] = new int[N], dt[] = new int[N], r5a[] = new int[N], ro[] = new int[N], a[] = new int[N], f19[] = new int[N], qw[] = new int[N], lm[] = new int[N], r7[] = new int[N], w[] = new int[N], ye[] = new int[N], o6[][] = new int[N][N];
        char sd6 = 22383, oc[] = new char[N], xr[] = new char[N];
        byte u[] = new byte[N], f[][] = new byte[N][N];
        long ix5 = 380518257166989722L, e3[] = new long[N], xe[] = new long[N], t9[] = new long[N], z[] = new long[N], tn[] = new long[N], rdk[][] = new long[N][N], vqx[][] = new long[N][N], g5[][] = new long[N][N];

        init(e3, -2495346211564744567L);
        init(xe, 8534715835329033339L);
        init(oc, (char) 18366);
        init(g, 13217);
        init(e6b, -52317);
        init(t9, 2948592224541209303L);
        init(mk5, 50709);
        init(dt, 64486);
        init(r5a, -7881);
        init(ro, -57040);
        init(z, 4357388111023259530L);
        init(a, -61876);
        init(f19, 39900);
        init(u, (byte) 0);
        init(qw, 54938);
        init(lm, 597);
        init(r7, 22017);
        init(xr, (char) 6415);
        init(vu6, (short) -754);
        init(w, -20168);
        init(tn, 5926283343537433558L);
        init(ye, -9334);
        init(o6, 6775);
        init(rdk, 3692791823412114738L);
        init(vqx, -554491793722978846L);
        init(g5, 4147566895333248093L);
        init(f, (byte) 11);

        int[] x;
        int n9 = -10;
        try {
            int b = 11;
            while (--b > 0) {
                for (long j : e3) {
                    ng = 0;
                    switch ((int) ng) {
                    case 1:
                        int ts = 11;
                        do {
                            int q = 0;
                            try {
                                y((int) (e3[27]), (int) (++n3),
                                        (int) ((n3 + n3) + (xe[6])));
                                lfp = 0;
                                switch ((int) lfp) {
                                case 1:
                                    if (ix5 > 0)
                                        break;
                                default:
                                    l((int) (oc[2]));
                                    try {
                                        jpp = 0;
                                        switch ((int) jpp) {
                                        case 1:
                                            l((int) (xe[14]));
                                            if (xnv > 0)
                                                break;
                                            break;
                                        }
                                        xnv += (int) (g[25]);
                                    } catch (ArrayIndexOutOfBoundsException sc) {
                                        if (sd6 > 0)
                                            break;
                                    } finally {
                                        ub -= (int) (t9[18]);
                                        t9[6] += (long) (xnv - (ub * ((e3[21]) - (e6b[14]))));
                                    }
                                }
                                ub = (int) (ub / q);
                                ub -= (int) (ub % (((n3 + (-4548)) - (dt[7]) != 0) ? (n3 + (-4548))
                                        - (dt[7])
                                        : 1));
                            } catch (ArithmeticException y) {
                                lfp *= (int) ((xnv) / ((r5a[9] != 0) ? r5a[9]
                                        : 1));
                                l((int) ((((-3506) + lfp) + ((z[12]) + ix5)) + ((a[6]) + (f19[19]))));
                            } finally {
                                y((int) ((sd6) / ((ub != 0) ? ub : 1)),
                                        (int) (-((r5a[5]) - (xnv - 2435))),
                                        (int) (((r5a[26]) - -3516263313903768801L) - (u[18])));
                                ng -= (int) (h7u--);
                            }
                        } while (--ts > 0);
                        break;
                    default:
                        for (h3v = 1; h3v < 23; ++h3v) {
                            i5b += (int) (ih--);
                        }
                    }
                }
            }
            x = new int[n9];
            for (bg = 1; bg < 14; bg += 2) {
                vo += (int) (xr[bg]);
            }
        } catch (NegativeArraySizeException ty5) {
            for (d = 1; d < 12; d++) {
                md = (int) (-61346 + ng);
            }
            for (s9f = 18; s9f > 1; --s9f) {
                i5b += (int) (p3k++);
            }
        } finally {
            for (r = 1; r < 21; r++) {
                ye[r] -= (int) (ara++);
            }
            for (ar = 1; ar < 16; ++ar) {
                xnv -= (int) ((((f[ar + 1][ar - 1]) - (r5a[ar + 1])) - (statGet())) + -44583);
            }
        }

        System.out.println("short: " + checkSum(vu6));
        System.out.println("int: " + ng + "," + n3 + "," + lfp + "," + jpp
                + "," + xnv + "," + ub + "," + zih + "," + vo + "," + h7u + ","
                + h3v + "," + i5b + "," + ih + "," + md + "," + bg + "," + d
                + "," + s9f + "," + p3k + "," + ge + "," + r + "," + ara + ","
                + ar + "," + checkSum(g) + "," + checkSum(e6b) + ","
                + checkSum(mk5) + "," + checkSum(dt) + "," + checkSum(r5a)
                + "," + checkSum(ro) + "," + checkSum(a) + "," + checkSum(f19)
                + "," + checkSum(qw) + "," + checkSum(lm) + "," + checkSum(r7)
                + "," + checkSum(w) + "," + checkSum(ye) + "," + checkSum(o6));
        System.out.println("char: " + (int) sd6 + "," + (int) checkSum(oc)
                + "," + (int) checkSum(xr));
        System.out.println("byte: " + checkSum(u) + "," + checkSum(f));
        System.out.println("long: " + ix5 + "," + checkSum(e3) + ","
                + checkSum(xe) + "," + checkSum(t9) + "," + checkSum(z) + ","
                + checkSum(tn) + "," + checkSum(rdk) + "," + checkSum(vqx)
                + "," + checkSum(g5));

        System.out.println("y_check_sum: " + y_check_sum);
        System.out.println("l_check_sum: " + l_check_sum);
        System.out.println("statIntField: " + statIntField);
    }
}
