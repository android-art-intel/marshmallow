/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.5.001). Sun Feb  1 03:44:11 2015
package OptimizationTests.regression.test1381_2;

import OptimizationTests.regression.shared.*;

public class Main {

    public static final int N = 100;

    public static byte byFld=98;

    public static long iMeth_check_sum = 0;

public static int iMeth(byte by) {

    int i3=-41660, i4=44949, i5=41982, i6=-191, iArr1[]=new int[N];
    float f=55.766F;
    byte byArr[]=new byte[N];
    long l1=7788856170692885215L, lArr1[][]=new long[N][N];
    double d=11.26013;

    i5 = 77;
    while (--i5 > 0) {
        i4 = i5;
        i6 = 1;
        while (++i6 < 66) {
            for (d = 2; d < 48; ++d) {
                byArr[(int)(d)] = (byte)(i4--);
                i4 = i3;
            }
        }
    }

    long meth_res = Double.doubleToLongBits(d) ;

    iMeth_check_sum += meth_res;
    return (int)meth_res;
}

public static void main(String[] strArr) {

    int i=-54725, i1=8;

    for (i = 2; i < 81; ++i) {
        if (iMeth((byte)(117)) > 10) {
            i1 += i;
        }
    }
    System.out.println("iMeth_check_sum: " + iMeth_check_sum);
}
}
