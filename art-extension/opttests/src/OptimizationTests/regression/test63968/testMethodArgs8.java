/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */    

/** 
 * @author: Vera Y.Petrashkova
 * @version: $Revision: 1.4 $
 */

package OptimizationTests.regression.test63968;

public class testMethodArgs8 extends testMethodArgs {

    public void printInfo() {
   	    System.out.println("Number of registers in run_call: 110");
    }

    public int run_call(int last) {
        testMethodArgs tObj = new testMethodArgs();
            return call(
                1234567,
                1234567,
                9.3f,
                9.3f,
                'a',
                1234567,
                1234567,
                1234567,
                9.3f,
                9.3f,
                'a',
                new testMethodArgs(), //            null,
                9.3f,
                456e45,
                9.3f,
                9.3f,
                456e45,
                456e45,
                (short)32767,
                456e45,
                1234567,
                1234567,
                1234567,
                456e45,
                1234567,
                1234567,
                9.3f,
                456e45,
                456e45,
                new testMethodArgs(), //            null,
                new testMethodArgs(), //            null,
                (byte)-127,
                (short)32767,
                (short)32767,
                456e45,
                null,
                9.3f,
                456e45,
                new testMethodArgs(), //            null,
                new testMethodArgs(), //            null,
                new testMethodArgs(), //            null,
                (short)32767,
                (short)32767,
                new testMethodArgs(), //            null,
                9.3f,
                (short)32767,
                (short)32767,
                new testMethodArgs(), //            null,
                new testMethodArgs(), //            null,
                new testMethodArgs(), //            null,
               (short)32767,
               (byte)-127,
               (short)32767,
               (byte)-127,
               456e45,
               (byte)-127,
               (byte)-127,
               'a',
               'a',
               null,
               'a',
               'a',
               'a',
               (byte)-127,
               (byte)-127,
               (byte)-127,
               (short)32767,
               (byte)-127,
               (byte)-127,
               'a',
               'a',
               'a',
               new String("proba1"),
               1234567,
               1234567,
               9.3f,
               9.3f,
               'a',
               1234567,
               1234567,
               1234567,
               9.3f,
               9.3f,
               'a',
               tObj, //            null,
               9.3f,
               456e45,
               9.3f,
               9.3f,
               456e45,
               456e45,
               (short)32767,
               last);
    }

    public int call(
        int i0,
        int i1,
        float f3,
        float f4,
        char c2,
        int i7,
        int i8,
        int i9,
        float f0,
        float f1,
        char c3,
        testMethodArgs o3,
        float f5,
        double d8,
        float f8,
        float f9,
        double d0,
        double d1,
        short s6,
        double d4,
        int i4,
        int i5,
        int i6,
        double d5,
        int i2,
        int i3,
        float f2,
        double d6,
        double d9,
        testMethodArgs o1,
        testMethodArgs o2,
        byte b3,
        short s7,
        short s8,
        double d2,
        testMethodArgs o5,
        float f7,
        double d7,
        testMethodArgs o10,
        testMethodArgs o11,
        testMethodArgs o12,
        short s0,
        short s1,
        testMethodArgs o9,
        float f6,
        short s4,
        short s5,
        testMethodArgs o6,
        testMethodArgs o7,
        testMethodArgs o8,
        short s9,
        byte b0,
        short s3,
        byte b2,
        double d3,
        byte b4,
        byte b9,
        char c0,
        char c1,
        testMethodArgs o4,
        char c4,
        char c5,
        char c6,
        byte b5,
        byte b6,
        byte b1,
        short s2,
        byte b7,
        byte b8,
        char c7,
        char c8,
        char c9,
        String str1,
        int i00,
        int i11,
        float f33,
        float f44,
        char c22,
        int i77,
        int i88,
        int i99,
        float f00,
        float f11,
        char c33,
        testMethodArgs o3_1,
        float f55,
        double d88,
        float f88,
        float f99,
        double d00,
        double d11,
        short s66,
        int last) {
        
        testF = last;
        return last;
    }
}

