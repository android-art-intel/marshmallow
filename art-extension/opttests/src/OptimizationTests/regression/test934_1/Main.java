/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.4.001). Wed Nov 26 19:20:25 2014
package OptimizationTests.regression.test934_1;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static void main(String[] i74) {

        int k8t = -43916, oq = -47769, ui = 62520, s = -13239, n85 = -4494, ocy = 25666, d = 56968, bg4[] = new int[N];
        byte pw = -104;
        long j = -6891736890734774656L, yh[] = new long[N];

        init(yh, -2836318478042198500L);

        n85 = 1;
        while (++n85 < 85) {
            for (ocy = n85; ocy > n85; ocy--) {
                oq -= -1331;
                oq *= (int) (((j++) + yh[ocy]) + ((pw - d) + (-21738 << (-18323 - k8t))));
            }
        }

        System.out.println("n85 ocy d = " + n85 + "," + ocy + "," + d);
    }
}
