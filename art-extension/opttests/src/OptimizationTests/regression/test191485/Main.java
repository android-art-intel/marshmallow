/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.2.001). Sun Apr 27 05:53:51 2014
package OptimizationTests.regression.test191485;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

public static final int N = 500;

    public static boolean vj2=false;
    public static double k84=-48.450;
    public static int afe=-64415, eh=-47146, fl=-11598, hd1=19757;

public static void main(String[] tk) {

    boolean xj=true, gd1=true, ov9[]=new boolean[N], wt[]=new boolean[N];
    byte r=123, rqb=-68, dc=-45, qb=70;
    long fh=664750082361478909L, p1=4672894546221905811L, kv3=7937349941188162475L, iy=1492221929395673407L,
        s2m=1809621110267659431L, fv2=4869566346303728480L, x=-966079576499311361L, ya=-1344496689487405883L,
        rd=-2723980772697019521L, hmp=281568587869209253L, cy7=-7972758489567394024L, b=4813473981272606408L,
        r5=-9098532847565335453L, y8=4891220206359036362L, tzi[]=new long[N], hs[]=new long[N];
    short q=-8725, sh=-25666, oz2=-6058, ra[]=new short[N], rw[][]=new short[N][N];
    double t=41.547, xd2=-65.400, gh4=99.509, u=79.724, wzf=50.274, et[]=new double[N];
    float rc=-88.65F, xwf=-127.289F, y=27.948F, tph=123.214F, ov5=72.139F, eak=-7.35F, rf=12.792F, r9g=-45.352F,
        k3c=100.155F, h1p=77.224F, d1=-100.237F, vp0[]=new float[N], vw[]=new float[N], z[]=new float[N], tf[]=new
        float[N], c6[]=new float[N], reu[][]=new float[N][N];
    int s=-43033, n=53164, q45=-64338, f=46497, qn=57892, jdz=51656, j=9392, ek=15529, x4b=-30179, r5f=-49849,
        sx=-49680, n5=53284, m5c=8117, bw=4292, ry=-32352, p=-13476, lt=25117, f5k=64812, bbf=5188, jz=-44845,
        gqk=7809, h=56011, bei=-15779, bsf=55994, gv0=-13779, by=29153, ex=54900, g=-14687, kz=-9203, we=-49266,
        o=26996, nd=-7280, v=8743, g5x=15456, a6d=-10105, w4i=-18281, q7=57164, m6=-47465, cbx=-2368, a=36144,
        ydd=-63619, ae=-29869, d=-52534, dg=5622, mmc=5711, zo=41711, xk=-8387, q6u=48152, gd=55913, r42=42438,
        hr=-19746, m=41173, yq=-47405, gbg=54663, aq0=42929, fj=-39263, lgw=-60693, s8=38083, ywg=9189, tlo=-40122,
        ott=46588, t6=-48323, cd=14842, b5s=21689, vab=-26069, v96[][]=new int[N][N], lun[]=new int[N], kxc[]=new
        int[N], erv[]=new int[N], d0[]=new int[N], j09[]=new int[N], w[]=new int[N], k9[]=new int[N], g7g[]=new int[N],
        x2[]=new int[N], z0[]=new int[N], l[]=new int[N], f9[]=new int[N];

    init(vp0, 102.349F);
    init(et, 32.841);
    init(v96, 35967);
    init(ra, (short)-4956);
    init(ov9, true);
    init(lun, -32104);
    init(vw, 95.572F);
    init(kxc, 33802);
    init(z, 6.185F);
    init(erv, 16034);
    init(d0, -56297);
    init(j09, 44834);
    init(tf, 3.1023F);
    init(w, -63136);
    init(c6, 23.336F);
    init(rw, (short)-20893);
    init(k9, -59205);
    init(g7g, 7006);
    init(reu, 114.664F);
    init(x2, -63034);
    init(tzi, 1058332650575505093L);
    init(hs, 8922305230861461744L);
    init(z0, 56199);
    init(wt, true);
    init(l, 11159);
    init(f9, 40244);

    switch ((((s >>= n) >>> 1) % 2) + 59) {
    case 59:
        k84 %= (q45 | 1);
        for (f = 24; f < 498; f++) {
            qn = 193;
            while ( --qn > 0 ) {
                rc /= ((long)(f - (jdz *= (int)(vp0[f + 1] *= n))) | 1);
                j = 267;
                while ( --j > 0 ) {
                    try {
                        q45 = (1264356510 / n);
                        n = (1772 % n);
                        x4b = (-40013 / ek);
                    } catch (ArithmeticException a_e) {}
                    r5f += (int)et[j - 1];
                }
            }
        }
        sx = 473;
        do {
            jdz *= (x4b = ((n5 - afe) + s));
            switch (sx + 85) {
            case 85:
                s += (int)((-536829796370525405L + (r5f - k84)) - ((m5c + fh) / -50112));
                k84 += (-342935223894614849L + (sx * (-(j + r))));
            case 86:
                k84 = ((--bw) + (-(afe -= 10368)));
                ry <<= (int)(v96[sx][sx] >> (p *= (int)(fh * j)));
                break;
            case 87:
                v96[sx - 1][sx] >>>= (int)(q45 - p1);
                break;
            case 88:
                p1 = (--ek);
                break;
            case 89:
                lt ^= (int)(p + ((-fh) - (p1 << fh)));
                break;
            case 90:
                t = (((-21983 * xwf) - (f * r5f)) + fh);
            case 91:
                p1 = (long)(((++f5k) + (et[sx - 1]++)) * afe);
            case 92:
                ra[sx - 1] -= (short)(n * 101);
                break;
            case 93:
                bbf >>>= -20281;
                break;
            case 94:
                ov9[sx] = (xj = ((q + jz) == (gqk - h)));
                break;
            case 95:
                y -= (lun[sx + 1] += n);
                break;
            case 96:
                k84 += (((-(sx - bei)) * (k84 += bei)) * (kv3--));
                break;
            case 97:
                bei = (int)((-(vw[sx - 1] %= 1654557869895569449L)) + ((-97.13F - kxc[sx]) + h));
                break;
            case 98:
                tph += kxc[sx + 1];
                break;
            case 99:
                v96[sx][sx + 1] = (int)((-n) + ((j - y) * bsf));
                break;
            case 100:
                break;
            case 101:
                z[sx - 1] = (kxc[sx + 1]--);
                break;
            case 102:
                if ((fh++) < (ov5 % ((long)((k84++) * (8477 / ((long)xd2 | 1))) | 1))) continue;
            case 103:
                kv3 = (-(erv[sx] - (++kv3)));
                break;
            case 104:
                lt %= (int)((long)(((lt + -77.905F) * (3225212186210755629L ^ (long)(xd2 - r))) + ((-(rqb - gv0)) + (q
                    - iy))) | 1);
                break;
            case 105:
                sh *= (short)((ov5++) - ((fh << eh) + (by + m5c)));
                break;
            case 106:
                p1 = qn;
                break;
            case 107:
                ex >>= (int)(g - (ov5 * gv0));
                break;
            case 108:
                lun[sx] -= (int)(((-(jz - p1)) + -34958) * ((s2m++) - (gqk += ex)));
                break;
            case 109:
                afe = (~kz);
                break;
            case 110:
                d0[sx + 1] += ((d0[sx] - (we -= rqb)) % (o | 1));
            case 111:
                xd2 += ((fh - (fv2 - gh4)) % (nd | 1));
                break;
            case 112:
                rc += ((--j09[sx - 1]) * ((-(-(eak + p1))) + (n5 - rc)));
                break;
            case 113:
                break;
            case 114:
                eak = (((jdz = (int)fv2) / ((v = 26701) | 1)) + (--tf[sx]));
            case 115:
                fv2 /= (bei | 1);
                break;
            case 116:
                w[sx + 1] -= (int)(((long)(g5x / ((long)y | 1)) >> (long)(rf - 43331)) + (62592 + (c6[sx - 1]--)));
            case 117:
                n &= (int)((rw[sx][sx - 1] ^= (short)(rc * tph)) - ((a6d + w4i) + (lt - bsf)));
            case 118:
                try {
                    eh = (1303488959 / q7);
                    cbx = (m6 % -138);
                    w4i = (-213 / eh);
                } catch (ArithmeticException a_e) {}
            case 119:
            case 120:
                r9g = k9[sx];
            case 121:
                c6[sx] %= ((long)(3004 * ((a * ydd) - ov5)) | 1);
                break;
            case 122:
                x = g7g[sx - 1];
                break;
            case 123:
                we += ek;
                break;
            case 124:
                q7 <<= h;
                break;
            case 125:
                g7g[sx] |= (int)(-((long)(0.7F - (35301 >> fv2)) >> (48406 + (ae / (dc | 1)))));
                break;
            case 126:
                break;
            case 127:
                kz >>= (erv[sx] = (o = (bbf / (d | 1))));
            case 128:
                reu[sx][sx] = (((ya + fh) ^ (n >> dg)) + (-x2[sx + 1]));
                break;
            case 129:
                d0[sx - 1] &= (int)((et[sx - 1] = (fl - x)) + ((ya & dg) - (-(gv0 * k3c))));
                break;
            case 130:
                bei *= (int)(((mmc - zo) >> (long)(y + p1)) + sh);
                break;
            case 131:
                xk *= (int)(~(tzi[sx + 1]++));
                break;
            case 132:
                q6u = (int)(rd + (oz2++));
                break;
            case 133:
                gd = (--r42);
            case 134:
                n5 = (int)(hr << (long)(k9[sx] * r9g));
                break;
            case 135:
                oz2 = (short)(z[sx + 1] * ((sx ^ jz) - d));
                break;
            case 136:
                s2m += (m << gqk);
                break;
            case 137:
                o >>= (int)(((p1 + n5) ^ hs[sx]) + (++hmp));
                break;
            case 138:
                tzi[sx] += ((long)((f - u) / ((long)(ek * 70.144F) | 1)) | (-(p1 - yq)));
            case 139:
                ov5 += (-(fh = -23455));
                break;
            case 140:
                cy7 = ((hd1 = fl) - (-1856533443269341588L - (--d0[sx - 1])));
            case 141:
                z0[sx + 1] *= (int)((b - gbg) * (-(h1p * g)));
            case 142:
                gd1 = (((wt[sx] = vj2) && (s2m > qb)) || (gd1 = vj2));
                break;
            case 143:
                m6 = (4203 / (qn | 1));
            case 144:
                aq0 += (int)wzf;
            case 145:
                fj += (int)(ya * (-ae));
                break;
            case 146:
                hd1 -= (-22344 - d0[sx + 1]);
            case 147:
                lgw |= (++s8);
            case 148:
                ywg >>>= l[sx];
                break;
            case 149:
                lun[sx - 1] -= tlo;
                break;
            case 150:
                r5 *= (++jz);
                break;
            case 151:
                a += ((-(h + a6d)) + ott);
                break;
            case 152:
                t6 += (int)wzf;
                break;
            case 153:
            case 154:
                s8 = (int)(p1 = v96[sx][sx]);
            default:
                ov5 += ((--bei) - ((++q45) + (a6d = (int)d1)));
            }
        } while ( --sx > 0 );
        break;
    case 60:
        y8 += (cd = ((--b5s) - (cd - vab)));
        break;
    default:
        bei <<= (f9[(r5f >>> 1) % N]++);
    }

    System.out.println("s n q45 = " + s + "," + n + "," + q45);
    System.out.println("f qn rc = " + f + "," + qn + "," + Float.floatToIntBits(rc));
    System.out.println("jdz j ek = " + jdz + "," + j + "," + ek);
    System.out.println("x4b r5f sx = " + x4b + "," + r5f + "," + sx);
    System.out.println("n5 m5c fh = " + n5 + "," + m5c + "," + fh);
    System.out.println("r bw ry = " + r + "," + bw + "," + ry);
    System.out.println("p p1 lt = " + p + "," + p1 + "," + lt);
    System.out.println("t xwf f5k = " + Double.doubleToLongBits(t) + "," + Float.floatToIntBits(xwf) + "," + f5k);
    System.out.println("bbf xj q = " + bbf + "," + xj + "," + q);
    System.out.println("jz gqk h = " + jz + "," + gqk + "," + h);
    System.out.println("y bei kv3 = " + Float.floatToIntBits(y) + "," + bei + "," + kv3);
    System.out.println("tph bsf ov5 = " + Float.floatToIntBits(tph) + "," + bsf + "," + Float.floatToIntBits(ov5));
    System.out.println("xd2 rqb gv0 = " + Double.doubleToLongBits(xd2) + "," + rqb + "," + gv0);
    System.out.println("iy sh by = " + iy + "," + sh + "," + by);
    System.out.println("ex g s2m = " + ex + "," + g + "," + s2m);
    System.out.println("kz we o = " + kz + "," + we + "," + o);
    System.out.println("fv2 gh4 nd = " + fv2 + "," + Double.doubleToLongBits(gh4) + "," + nd);
    System.out.println("eak v g5x = " + Float.floatToIntBits(eak) + "," + v + "," + g5x);
    System.out.println("rf a6d w4i = " + Float.floatToIntBits(rf) + "," + a6d + "," + w4i);
    System.out.println("q7 m6 cbx = " + q7 + "," + m6 + "," + cbx);
    System.out.println("r9g a ydd = " + Float.floatToIntBits(r9g) + "," + a + "," + ydd);
    System.out.println("x ae dc = " + x + "," + ae + "," + dc);
    System.out.println("d ya dg = " + d + "," + ya + "," + dg);
    System.out.println("k3c mmc zo = " + Float.floatToIntBits(k3c) + "," + mmc + "," + zo);
    System.out.println("xk q6u rd = " + xk + "," + q6u + "," + rd);
    System.out.println("oz2 gd r42 = " + oz2 + "," + gd + "," + r42);
    System.out.println("hr m hmp = " + hr + "," + m + "," + hmp);
    System.out.println("u yq cy7 = " + Double.doubleToLongBits(u) + "," + yq + "," + cy7);
    System.out.println("b gbg h1p = " + b + "," + gbg + "," + Float.floatToIntBits(h1p));
    System.out.println("gd1 qb aq0 = " + gd1 + "," + qb + "," + aq0);
    System.out.println("wzf fj lgw = " + Double.doubleToLongBits(wzf) + "," + fj + "," + lgw);
    System.out.println("s8 ywg tlo = " + s8 + "," + ywg + "," + tlo);
    System.out.println("r5 ott t6 = " + r5 + "," + ott + "," + t6);
    System.out.println("d1 y8 cd = " + Float.floatToIntBits(d1) + "," + y8 + "," + cd);
    System.out.println("b5s vab vp0 = " + b5s + "," + vab + "," + Double.doubleToLongBits(checkSum(vp0)));
    System.out.println("et v96 ra = " + Double.doubleToLongBits(checkSum(et)) + "," + checkSum(v96) + "," +
        checkSum(ra));
    System.out.println("ov9 lun vw = " + checkSum(ov9) + "," + checkSum(lun) + "," +
        Double.doubleToLongBits(checkSum(vw)));
    System.out.println("kxc z erv = " + checkSum(kxc) + "," + Double.doubleToLongBits(checkSum(z)) + "," +
        checkSum(erv));
    System.out.println("d0 j09 tf = " + checkSum(d0) + "," + checkSum(j09) + "," +
        Double.doubleToLongBits(checkSum(tf)));
    System.out.println("w c6 rw = " + checkSum(w) + "," + Double.doubleToLongBits(checkSum(c6)) + "," + checkSum(rw));
    System.out.println("k9 g7g reu = " + checkSum(k9) + "," + checkSum(g7g) + "," +
        Double.doubleToLongBits(checkSum(reu)));
    System.out.println("x2 tzi hs = " + checkSum(x2) + "," + checkSum(tzi) + "," + checkSum(hs));
    System.out.println("z0 wt l = " + checkSum(z0) + "," + checkSum(wt) + "," + checkSum(l));
    System.out.println("f9 = " + checkSum(f9));
    
    System.out.println("k84 afe eh = " + Double.doubleToLongBits(k84) + "," + afe + "," + eh);
    System.out.println("fl hd1 vj2 = " + fl + "," + hd1 + "," + vj2);
}
}
