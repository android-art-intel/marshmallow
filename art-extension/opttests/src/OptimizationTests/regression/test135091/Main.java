/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.1.000). Sun Sep  1 07:12:58 2013
package OptimizationTests.regression.test135091;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 30;

    public static void main(String[] hg7) {

        int cz = 34056, ld = 38862, ul = 57349, d = 47575, q2 = 17997, h6 = -26394, ox = -49412, cf = -32055, g = -54784, a = -30747, mun[] = new int[N];
        short mhk = -2604;
        byte s = 69;
        long nt = 8559762019860639812L, u = -6059461673962952937L, t = 4536102519686288239L, bnq = 6991931823476357671L, f = -2598075467121421482L;

        init(mun, 42383);

        for (cz = 1; cz < 15; cz++) {
            for (ld = cz; ld < 17; ld++) {
                ul -= (int) (nt--);
                ul *= (int) (-(u = (cz + ld)));
                mun[ld + 1] ^= mun[ld];
            }
            d = 10;
            while (--d > 0) {
                q2 /= ((h6 >>> 1) + 1);
                mun[cz] *= h6;
                t = 27;
                do {
                    s = (byte) (q2 + (h6 | (--ul)));
                    u += (((nt / ((cz >>> 1) + 1)) + (-(4348753540522886487L * (q2 >> ox)))) >> q2);
                    mun[cz - 1] -= ul;
                } while (--t > 0);
                mhk -= (short) (((t * cf) - (ld - bnq)) / ((ul >>> 1) + 1));
                cf -= ox;
            }
            g = (int) ((--f) - a);
        }

        System.out.println("int: " + cz + "," + ld + "," + ul + "," + d + ","
                + q2 + "," + h6 + "," + ox + "," + cf + "," + g + "," + a + ","
                + checkSum(mun));
        System.out.println("short: " + mhk);
        System.out.println("byte: " + s);
        System.out.println("long: " + nt + "," + u + "," + t + "," + bnq + ","
                + f);

    }
}
