/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.5.001). Sat Feb  7 05:30:55 2015
package OptimizationTests.regression.test1476_2;

import OptimizationTests.regression.shared.*;

public class Main {

    public static final int N = 100;

public static void main(String[] strArr) {

    float f=33.676F;
    double dArr = 0;
    long l1=-2048524380L, l2=39324L, lArr = 0;
    int i=-236, i1=140, i2=-21085, i3=14, i4=6, i5=10257, iArr[]=new int[N];

    lArr = -211L;
    long l = lArr;
    f += (iArr[(59839 >>> 1) % N] );

    for (i1 = 5; i1 < 92; i1++) {
        for (i2 = 20; i2 > 1; i2 -= 2) {
            l1 = (long)(++dArr);
            i = i1;
        }
        i = (int)Math.min(-(i - 37883), l1--);
        i3 =  (239 + i);
        i4++;

        for (i5 = 1; i5 < 31; i5++) {
            try {
                iArr[0] = (int)(lArr - i3);
                i4 += (-i1);
                i--;
            }
            catch (NullPointerException exc) {
            }
        }
    }

    System.out.println("i i1 = " + i + "," + i1);
    System.out.println("i2 = " + i2 );
}
}
