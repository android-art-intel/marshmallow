/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.1.004). Thu Dec 19 10:39:20 2013
package OptimizationTests.regression.test160134;

import OptimizationTests.regression.shared.*;

class UserDefinedException extends RuntimeException {
    public int field;
}

public class Main extends FuzzerUtils {

    public static final int N = 30;

    public static void main(String[] sec) {

        short f = -17424;
        int d9y = 16839, l4 = -12365, ti0 = -5041, uux = -49804, e1 = 19259, t = -26224, e7 = -37428, w = -16822, viq = -40929, vw = -63112, y7j = 16454, z = -64808, d = -40286, ona[][] = new int[N][N], x[] = new int[N];
        double wc = -7.605;
        float vc = 32.916F, b = 85.633F;
        long v4 = -4048863948550776066L, h5 = -4354243910894175087L, ndv = -7300307046736332243L, rfc[] = new long[N];

        init(rfc, -6097019050704039844L);
        init(ona, 29142);
        init(x, 21241);

        v4 = 25;
        while (--v4 > 0) {
            for (d9y = 1; d9y < 25; ++d9y) {
                l4 *= (-ti0);
                l4 = (++l4);
            }
        }
        switch (((((int) (v4 % 4859615402184677398L)) >>> 1) % 2) + 39) {
        case 39:
            for (uux = 1; uux < 5; ++uux) {
                e1 = 11;
                while (--e1 > 0) {
                    ti0 <<= (int) ((wc -= (uux + l4)) + v4);
                }
                for (long y : rfc) {
                    for (t = 1; t < uux; ++t) {
                        try {
                            l4 = e7;
                            if (((((-3216 & (long) (l4 + wc)) % ((-(ti0 /= (w | 1))) | 1)) + ((e7 + viq) % (v4 | 1))) % (uux | 1)) < 65536)
                                throw new UserDefinedException();
                        } catch (ArrayIndexOutOfBoundsException i3a) {
                            ti0 = (int) ((h5 * (--y7j)) + (z + (-46240 * (wc - ndv))));
                        } catch (UserDefinedException so1) {
                            ona[t - 1][uux] -= (int) ((-l4) - (-(-vc)));
                            vc += ((v4 - (h5 * vw)) - (vw += (int) (b + l4)));
                        } finally {
                            x[uux - 1] *= (int) (-((vw + 43017) * (f * vc)));
                        }
                    }
                }
            }
        case 40:
            ona[(vw >>> 1) % N][(24836 >>> 1) % N] -= d;
            break;
        }

        System.out.println("v4 d9y l4 = " + v4 + "," + d9y + "," + l4);
        System.out.println("ti0 uux e1 = " + ti0 + "," + uux + "," + e1);
        System.out.println("wc t e7 = " + Double.doubleToLongBits(wc) + "," + t
                + "," + e7);
        System.out.println("w viq vc = " + w + "," + viq + ","
                + Float.floatToIntBits(vc));
        System.out.println("h5 vw b = " + h5 + "," + vw + ","
                + Float.floatToIntBits(b));
        System.out.println("y7j z ndv = " + y7j + "," + z + "," + ndv);
        System.out.println("f d rfc = " + f + "," + d + "," + checkSum(rfc));
        System.out.println("ona x = " + checkSum(ona) + "," + checkSum(x));

    }
}
