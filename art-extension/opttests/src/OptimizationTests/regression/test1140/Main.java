/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.5.001). Tue Jan 13 02:26:28 2015
package OptimizationTests.regression.test1140;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;


    public static long iMeth_check_sum = 0;

public static int iMeth() {

    int i1=106, i2=-5, i3=-8, i4=53706, i5=-53741, iArr[]=new int[N];
    long l1=2229266017L;
    byte by=61;
    short s=18536;
    float f=-46.474F;
    double d=-96.88721;

    init(iArr, 27924);

    i1 = 86;
    do {
        for (i2 = 4; i2 < 67; i2++) {
            iArr[i1 - 1] *= (int)(--f);
            i3 = (int)(iArr[i1 + 1] = (int)((i3 - i2) * (f + i2)));
            for (i4 = 1; i4 < 13; ++i4) {
                d *= (--l1);
                s *= by;
            }
        }
        switch ((i1 % 2) + 76) {
        case 76:
            i3 += ((i3++) * (++i3));
            i5 = 1;
            while (++i5 < 1) {
                i3 = (int)((-f) + i3);
                i3 |= i3;
            }
        case 77:
            f -= (i2 - (++i3));
            break;
        }
    } while (--i1 > 0);
    long meth_res = i1 + i2 + Float.floatToIntBits(f) + i3 + i4 + Double.doubleToLongBits(d) + l1 + s + by + i5 +
        checkSum(iArr);
    iMeth_check_sum += meth_res;
    return (int)meth_res;
}

public static void main(String[] strArr) {

    int i=-2, i6=13856;
    long l=-328030878L;

    for (i = 5; i < 83; i++) {
        l += iMeth();
        i6 = (i6++);
    }

    System.out.println("i l i6 = " + i + "," + l + "," + i6);


    System.out.println("iMeth_check_sum: " + iMeth_check_sum);
}
}
