/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.3.001). Sun May 25 05:45:12 2014
package OptimizationTests.regression.test198248_1;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

public static final int N = 300;


public static void main(String[] nx) {

    boolean ff9=true;
    int a=-50327, bg=-55109, ty=-60748, k3=-139, zb=-25454, yvn=-33747, b[]=new int[N];
    byte ulg=-29;
    short x1=-16915;
    double hrp=39.280, wxs[]=new double[N];
    float az[]=new float[N];
    long g=-8050522784326515201L, j0[]=new long[N];

    init(b, -21571);
    init(wxs, -40.219);
    init(j0, -5444602149854060756L);
    init(az, 28.102F);

    for (a = 3; a < 255; ++a) {
        for (bg = 1; bg < a; bg++) {
            ty >>= (int)((g--) - ((-60.869 - (g + g)) - (-g)));
            b[a] = (a + a);
            ty -= (int)g;
            b[a] *= (int)(hrp--);
            if (ff9 = (((bg - 35387) - a) > ((-16695 + a) + hrp))) continue;
            ff9 = (ff9 = (b[a] != (ty * -11.268)));
            ty = 58452;
            g |= (x1 -= (short)(++ty));
            ty = (a - (++ty));
            if (a > (wxs[bg]++)) break;
        }
        g = -5110567520185506036L;
        if ((--hrp) > (((x1 - ulg) * (--ty)) + ((j0[a - 1]--) + g))) continue;
        ty -= (-(--b[a - 1]));
    }
    for (long rby : j0) {
        for (k3 = 11; k3 < 263; ++k3) {
            g *= (--ulg);
            for (zb = 212; zb > k3; --zb) {
                if ((--b[k3]) >= (++ty)) continue;
                yvn = bg;
            }
            ty += (int)(5334748676709119336L - (hrp + (4244449443822069855L + (ulg + yvn))));
            j0[k3 - 1] *= (long)((a - (hrp - yvn)) + (ty = (x1--)));
        }
        az[(k3 >>> 1) % N] += (yvn--);
        ty -= (ty + 13018);
    }

    System.out.println("a bg ty = " + a + "," + bg + "," + ty);
    System.out.println("g hrp ff9 = " + g + "," + Double.doubleToLongBits(hrp) + "," + ff9);
    System.out.println("x1 ulg k3 = " + x1 + "," + ulg + "," + k3);
    System.out.println("zb yvn b = " + zb + "," + yvn + "," + checkSum(b));
    System.out.println("wxs j0 az = " + Double.doubleToLongBits(checkSum(wxs)) + "," + checkSum(j0) + "," +
        Double.doubleToLongBits(checkSum(az)));
    
}
}
