/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.3.001). Sat May 17 06:23:06 2014
package OptimizationTests.regression.test198248_2;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

public static final int N = 300;

    public static boolean bk=false;
    public static byte u6=63;
    public static int c5r=33028, qrx[][]=new int[N][N];
    public static float p[]=new float[N];

    static {
        init(qrx, 55283);
        init(p, 82.385F);
    }

public static void main(String[] h) {

    byte k24=76, a[]=new byte[N];
    short pg=4503, st[]=new short[N];
    long al=-8366591860818070031L, jm=-5862407251504623514L, w1=1848794387200178552L, b=-2907661723938664394L,
        o=2054676647022575515L, rg=5823910365526730180L, qu[][]=new long[N][N], c[]=new long[N];
    double g5=-111.734, xjk=120.419, vmh=112.826, s5b[]=new double[N];
    int k=23333, df=-30061, eh=-17729, hk=-64601, qq5=-12227, jr=16129, t6t=-46645, cm8=56347, ij=-520, n2e=-6185,
        yt=52528, ao=52160, i4=-17392, j=-2893, xk=-37396, vgl=19032, d[]=new int[N], pc[]=new int[N];
    float v=49.186F, v85=44.575F;

    init(qu, -9080950807798015072L);
    init(s5b, 83.627);
    init(c, -2922187593278174999L);
    init(a, (byte)124);
    init(d, 59731);
    init(st, (short)-22567);
    init(pc, 9944);

    k = 295;
    do {
        df += (int)(g5++);
        for (eh = k; eh < k; ++eh) {
            v *= qrx[k][eh - 1];
            al = eh;
        }
    } while ( --k > 0 );
    for (hk = 1; hk < 276; hk += 2) {
        for (qq5 = 108; qq5 > 5; qq5 -= 3) {
            pg += (short)(qq5 + df);
            df += (int)qu[qq5][hk - 1];
            if (hk <= (((qq5 + df) - (qq5 + k24)) | (long)(-(g5 + qq5)))) continue;
            for (jr = 4; jr < 73; ++jr) {
                bk = (k <= (++qrx[qq5 - 1][qq5 + 1]));
                g5 -= (-(al * (df = qq5)));
            }
            s5b[hk] -= al;
            qu[qq5 + 1][hk] = (--df);
            t6t = (--df);
            for (cm8 = 17; cm8 < 295; cm8++) {
                t6t *= -6767;
                df += (int)((k - (s5b[hk - 1] += al)) + (--t6t));
                pg = (short)((++t6t) * ((jr - jr) + al));
                switch (qq5 + 16) {
                case 16:
                    break;
                case 17:
                    k24 &= (byte)df;
                    t6t >>= cm8;
                    break;
                case 18:
                    ij = (int)al;
                    k24 = (byte)df;
                    break;
                case 19:
                    if ((jr - (-cm8)) != (--g5)) break;
                    break;
                case 20:
                    v *= ij;
                case 21:
                    qrx[cm8][cm8 + 1] *= (int)((v * v) + (--v));
                    break;
                case 22:
                    qu[qq5 - 1][hk] = (long)(((v / (df | 1)) - (hk - t6t)) - cm8);
                case 23:
                    ij *= (int)((k * (df - al)) + 84.319F);
                    break;
                case 24:
                    qrx[qq5][hk + 1] = (int)(((eh - jr) + (21128 - (c[cm8 + 1] += jr))) - ((eh + t6t) / ((long)(v + g5)
                        | 1)));
                case 25:
                    p[hk + 1] -= (++al);
                    break;
                case 26:
                    t6t -= (int)((a[cm8] * (qrx[qq5][hk - 1] &= df)) + ((-56926 * g5) - (jr / ((long)g5 | 1))));
                    break;
                case 27:
                    qrx[qq5 - 1][hk] -= eh;
                    break;
                case 28:
                    t6t += (t6t >>= (k - (qq5 % (eh | 1))));
                    break;
                case 29:
                    al -= (t6t - (qrx[hk][hk] = (int)(al / (cm8 | 1))));
                    break;
                case 30:
                    g5 = qu[hk][hk + 1];
                    break;
                case 31:
                    al = ((-58 * (--df)) * (t6t + (eh - jr)));
                    break;
                case 32:
                    v = (al >>= c[cm8]);
                case 33:
                    df &= (int)(jm + cm8);
                    break;
                case 34:
                    s5b[cm8 - 1] *= 735315591747341121L;
                    break;
                case 35:
                    al += (jm + (-(jm = k)));
                case 36:
                    df += cm8;
                    break;
                case 37:
                    df -= (int)(pg + ((long)(-56042 + (-(--v))) << ij));
                    break;
                case 38:
                    xjk += (qu[cm8][qq5 + 1]++);
                    break;
                case 39:
                    v += (++qrx[hk - 1][cm8]);
                    break;
                case 40:
                    v += (d[cm8]--);
                    break;
                case 41:
                    if ((((40024 - n2e) * (al * cm8)) + (n2e++)) >= (((n2e + 59577) + (3041128568700184088L * jr)) -
                        (ij++))) continue;
                case 42:
                    v = (((al - 64224) >>> (cm8 + k24)) - pg);
                    break;
                case 43:
                    qrx[hk + 1][qq5 + 1] = ((-(t6t % (pg | 1))) + t6t);
                    break;
                case 44:
                    t6t -= (n2e++);
                    break;
                case 45:
                    st[hk - 1] += (short)(++yt);
                    break;
                case 46:
                    bk = true;
                    break;
                case 47:
                    ij -= t6t;
                case 48:
                    ij ^= (int)(((-(n2e--)) * (51.315 - (yt--))) * ((df - jr) * qq5));
                case 49:
                    jm <<= (long)(ao + ((-26737 + jr) + (-19895 - (jr - g5))));
                    break;
                case 50:
                    xjk = k24;
                case 51:
                    qu[qq5 + 1][cm8] += jr;
                case 52:
                    jm *= (pc[qq5] = (int)((qu[cm8 - 1][cm8]--) - (yt + n2e)));
                    break;
                case 53:
                    ij = i4;
                    break;
                case 54:
                    if ((((jr + al) * (k24 * 55626)) != v) && ((bk = true) && ((56790 - (jm * -3496181535425840559L))
                        >= (qq5 * jm)))) continue;
                    break;
                case 55:
                    n2e = ((n2e + (n2e * 92)) - ((2685 * (ij -= 16462)) - qq5));
                    break;
                case 56:
                    p[qq5 + 1] -= ao;
                    break;
                case 57:
                    df = (int)(((23096 * (--jm)) - (s5b[cm8 - 1]--)) - pc[qq5]);
                    break;
                case 58:
                    qrx[cm8 - 1][cm8] -= (int)(((ao - yt) + (vmh - jm)) - ((cm8 + 38485) - (pg + 14.868)));
                    break;
                case 59:
                    j -= (int)3797879061766140255L;
                    break;
                case 60:
                    t6t %= (int)(((--yt) << (cm8 + (al - hk))) | 1);
                case 61:
                    ao = (int)((-(hk - eh)) * w1);
                    break;
                case 62:
                    ij += (int)(((j - w1) - (vmh - b)) - (--t6t));
                    break;
                case 63:
                    ij *= (int)(-(--s5b[qq5]));
                    break;
                case 64:
                    i4 -= df;
                    break;
                case 65:
                    n2e = (int)((v--) * ((df++) - t6t));
                    break;
                case 66:
                    v85 /= (eh | 1);
                    break;
                case 67:
                    xjk = (((51.294F + (o - ij)) + (v85 - n2e)) - 4589479909255025224L);
                    break;
                case 68:
                    df >>= (int)((v85--) - eh);
                case 69:
                    pc[qq5 + 1] = j;
                    break;
                case 70:
                    o += (long)v;
                case 71:
                    t6t += (int)(al * (jr - (++vmh)));
                    break;
                case 72:
                    w1 = jr;
                    break;
                case 73:
                    yt >>= (--xk);
                    break;
                case 74:
                    g5 = (d[hk + 1]++);
                    break;
                case 75:
                    xk = (-(~(-n2e)));
                case 76:
                    xk += (int)(((df - hk) - (-4793 * (-(t6t = (int)33.82)))) + jr);
                case 77:
                    df += (qrx[qq5 + 1][hk] = ((eh << n2e) + (++df)));
                    break;
                case 78:
                    b = (long)(((-27292 * (vmh--)) - (xjk - xjk)) + yt);
                    break;
                case 79:
                    ao >>= (-pc[qq5 - 1]);
                    break;
                case 80:
                    c5r = (int)(((v85 * v) + (++g5)) + ((-36030 + xk) * c[qq5]));
                    break;
                case 81:
                    u6 -= (byte)(((rg * 59052) - (k - 63103)) % ((vgl--) | 1));
                    break;
                case 82:
                    al *= (w1 << ((yt++) >> (--ao)));
                    break;
                case 83:
                    c[cm8] -= ((--t6t) + (df--));
                case 84:
                    pc[hk] <<= (int)(((--vgl) * (ij + -104)) + ((eh + vmh) - (--c5r)));
                    break;
                case 85:
                    ij = (pc[cm8 - 1]--);
                    break;
                }
            }
        }
    }

    System.out.println("k df g5 = " + k + "," + df + "," + Double.doubleToLongBits(g5));
    System.out.println("eh v al = " + eh + "," + Float.floatToIntBits(v) + "," + al);
    System.out.println("hk qq5 pg = " + hk + "," + qq5 + "," + pg);
    System.out.println("k24 jr t6t = " + k24 + "," + jr + "," + t6t);
    System.out.println("cm8 ij jm = " + cm8 + "," + ij + "," + jm);
    System.out.println("xjk n2e yt = " + Double.doubleToLongBits(xjk) + "," + n2e + "," + yt);
    System.out.println("ao i4 vmh = " + ao + "," + i4 + "," + Double.doubleToLongBits(vmh));
    System.out.println("j w1 b = " + j + "," + w1 + "," + b);
    System.out.println("v85 o xk = " + Float.floatToIntBits(v85) + "," + o + "," + xk);
    System.out.println("rg vgl qu = " + rg + "," + vgl + "," + checkSum(qu));
    System.out.println("s5b c a = " + Double.doubleToLongBits(checkSum(s5b)) + "," + checkSum(c) + "," + checkSum(a));
    System.out.println("d st pc = " + checkSum(d) + "," + checkSum(st) + "," + checkSum(pc));
    
    System.out.println("bk c5r u6 = " + bk + "," + c5r + "," + u6);
    System.out.println("qrx p = " + checkSum(qrx) + "," + Double.doubleToLongBits(checkSum(p)));
}
}
