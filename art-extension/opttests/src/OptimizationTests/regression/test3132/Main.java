/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Android Runtime Fuzzer tool (4.1.002). Sun Jan 24 20:17:55 2016
// srand = 191542986229432958526447903569673510775

package OptimizationTests.regression.test3132;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static long instanceCount=3871657349503121299L;
    public static float fFld=2.745F;
    public static boolean bFld=false;

public static void main(String[] strArr) {

    int i=-9, i1=61402, i2=5, i3=-44948, i4=-5, i5=202, i6=4, iArr[]=new int[N];
    byte by=-35;
    short s=-6394;
    long lArr[]=new long[N];

    init(iArr, -21359);
    init(lArr, 5479238953085493320L);

    for (i = 3; i < 97; i++) {
        Main.fFld -= ((by--) - iArr[i + 1]);
        i1 = 1;
        do {
            if (Main.bFld) {
                i2 ^= (int)(((i2 + Main.instanceCount) - (i2--)) * (~(i2 - i1)));
            }
            i2 = i;
            iArr[i1] = (int)((Main.instanceCount * (-(1.679F + (s - Main.fFld)))) * (i2++));
            i2 %= (int)((((i * i) + i2) - ((-lArr[i - 1]) - (++lArr[i + 1]))) | 1);
        } while (++i1 < 79);
        for (i3 = i; i3 < 23; i3++) {
            s -= by;
            i2 >>= (int)(++lArr[i]);
            i4 = 1;
            do {
                i2 = (int)(((++i2) - (Main.instanceCount - Main.instanceCount)) * i2);
                iArr[i3] += i4;
            } while (++i4 < 45);
            i2 -= iArr[i - 1];
        }
        Main.fFld = i1;
        for (i5 = 43; i5 > i; i5 -= 3) {
            double d=-14.100205;
            i6 = 1;
            do {
                Main.instanceCount += (-25238 + (i6 * i6));
                Main.instanceCount += Main.instanceCount;
                i2 = (i * s);
            } while (++i6 < 95);
            d -= (++Main.fFld);
            Main.fFld = (--i2);
            d = (-(58.26099 * i2));
            iArr[i5] -= (int)(lArr[i] = i5);
        }
    }

    System.out.println("i by i1 = " + i + "," + by + "," + i1);
    System.out.println("i2 s i3 = " + i2 + "," + s + "," + i3);
    System.out.println("i4 i5 i6 = " + i4 + "," + i5 + "," + i6);
    System.out.println("iArr lArr = " + checkSum(iArr) + "," + checkSum(lArr));

    System.out.println("Main.instanceCount Main.fFld Main.bFld = " + Main.instanceCount + "," +
        Float.floatToIntBits(Main.fFld) + "," + (Main.bFld ? 1 : 0));
}
}
