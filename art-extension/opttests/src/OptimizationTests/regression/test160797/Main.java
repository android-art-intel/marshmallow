/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.1.004). Sat Dec 21 23:16:57 2013
package OptimizationTests.regression.test160797;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 30;

    public static void main(String[] tm) {

        int a = -9362, z12 = -18970, oyu = -19309, g = 5669, b6m = 36873, pnk = 38930, p = 38739, huk = -7059, nn = -62704, pmc = -59198, l = -37972, x[] = new int[N], v1[] = new int[N], k[] = new int[N];
        float e5 = -22.339F, xd0 = 8.868F;
        double j = 103.81;
        long v = -5614863287968958423L, cs = 8538639374998026381L, pf = -3804377302409941288L, oc = 8691160544367490968L, yui[] = new long[N];

        init(x, -48488);
        init(yui, -8867549265076845770L);
        init(v1, 28295);
        init(k, -53202);

        for (int x6 : x) {
            a = (int) (v << (long) ((-35409 - (j + z12)) + -19006));
            for (oyu = 1; oyu < 11; ++oyu) {
                for (g = oyu; g > 1; --g) {
                    yui[g] = (long) ((e5 - a) + ((v - -28375) & (-6226398229079484876L * z12)));
                }
                try {
                    a *= (int) 639854019004204369L;
                    z12 = v1[(int) ((b6m * e5) - (x6 * pnk))];
                    v1[(int) (-(p %= (int) (v | 1)))] = (int) ((p - (-(-(xd0--)))) + (v1[oyu] -= (int) (v >>= x6)));
                    huk = -6675;
                    a -= 45112;
                    v1[nn] = (int) (-(6542 + (cs * 25863)));
                } catch (ArrayIndexOutOfBoundsException y) {
                    pf = 18;
                    while (--pf > 0) {
                        z12 *= (int) (((oc * -5457912030421704059L) * pmc) - v1[oyu]);
                        try {
                            k[oyu] = (p / 39011);
                            x[oyu + 1] = (pmc / l);
                            l = (l / 10554);
                        } catch (ArithmeticException a_e) {
                        }
                    }
                }
            }
        }

        System.out.println("a v j = " + a + "," + v + ","
                + Double.doubleToLongBits(j));
        System.out.println("z12 oyu g = " + z12 + "," + oyu + "," + g);
        System.out.println("e5 b6m pnk = " + Float.floatToIntBits(e5) + ","
                + b6m + "," + pnk);
        System.out.println("p xd0 huk = " + p + "," + Float.floatToIntBits(xd0)
                + "," + huk);
        System.out.println("nn cs pf = " + nn + "," + cs + "," + pf);
        System.out.println("oc pmc l = " + oc + "," + pmc + "," + l);
        System.out.println("x = " + checkSum(x));
    }
}
