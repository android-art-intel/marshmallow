/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.3.001). Thu May  8 01:33:01 2014
package OptimizationTests.regression.test193336;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

public static final int N = 500;

    public static short h3[]=new short[N];
    public static int eh3=11881, dt=2518, g1q=39203, amh=-27190, eq6=47283, lt=-63299;
    public static double ma[]=new double[N];
    public static long vho=-7191127309571476773L;
    public static float aq=73.808F;

    static {
        init(h3, (short)19571);
        init(ma, -77.470);
    }

public static void main(String[] f) {

    short ro=-11010, h4z=-15882, me6[]=new short[N];
    boolean zg0=false, yfk=false, ti=false, d4t=true, av=false;
    int c=63973, p=8443, wh=-8704, uh=57563, ov8=-43524, l=23703, u=-20901, e2o=-59273, qc=-14690, yf=50877, zzn=778,
        i7=-54645, aj=-33094, hii=-51201, j=-34175, z7=-20438, a2=-47656, ptg=-21983, gqd=-31792, yv=25305, nvq=-38468,
        g=-49610, w3s=-32035, b6l=16862, w=-44537, byi=43539, or=-10603, v5j=-6496, mqc=4658, co=65469, r98=-8298,
        oyd=61031, ijh=-61555, k=-8698, kc=43505, rn=41124, a=50109, rc=-59354, uhc=33886, b=-50690, x=9609, saf=28493,
        m7q=-51472, mlt=19311, l9j=-44579, ppv=46649, y=47420, t=-30717, ekc=-45783, ll=51775, dz=-40305, h=-47205,
        ahp[]=new int[N], hs[]=new int[N], c8[]=new int[N], e[]=new int[N], ukc[]=new int[N], usz[]=new int[N],
        zhl[]=new int[N], u24[]=new int[N], gj[]=new int[N], iq[]=new int[N], r4[]=new int[N];
    double v=124.548, s=14.421, le=17.547, ejm=21.789, rcs=26.942;
    byte ynp=-93, f7u=-41, ym[]=new byte[N];
    long o=5929373576615671709L, vpc=-7997920996375801248L, tz=-7490770698088787034L, mf=-7663467968239876307L,
        guz=6149425356292811756L, bt=7891176285424678409L, v9=2506238747463095815L, s4c=3448393998858081132L,
        ac1=-2615957975725548337L, jm=-8443203899519530423L, tk7=-7219105194062584116L, q9=-1070611008147813754L,
        udh=4717097787413410042L, h3i=-256416316009777982L, z[]=new long[N], m[]=new long[N], n[]=new long[N];
    float ww=-113.597F, mwg=-56.179F, n5=-127.430F, xz=-10.552F, h7[]=new float[N];

    init(me6, (short)19918);
    init(z, -4268525231448555427L);
    init(ahp, -55607);
    init(h7, 7.865F);
    init(hs, 40698);
    init(c8, 52631);
    init(e, 10490);
    init(ukc, -8859);
    init(usz, 24355);
    init(zhl, -61122);
    init(u24, -59023);
    init(ym, (byte)56);
    init(gj, 58129);
    init(m, 6885422800057588465L);
    init(n, -2423885724252405094L);
    init(iq, -27109);
    init(r4, -19346);

    for (c = 16; c < 437; c++) {
        eh3 += p;
    }
    for (wh = 18; wh < 463; wh++) {
        me6[wh + 1] -= (short)(--v);
        uh >>= (int)z[wh + 1];
        for (ov8 = 16; ov8 < 325; ov8++) {
            try {
                l = (uh % uh);
                ahp[wh + 1] = (-208 % p);
                u = (u / -231);
            } catch (ArithmeticException a_e) {}
        }
        v = (ro -= (short)((eh3 - o) * o));
        for (e2o = 19; e2o < 363; ++e2o) {
            for (dt = wh; dt > 1; --dt) {
                ynp = (byte)(v = ((uh * f7u) - (36.538 + ww)));
                s -= o;
                ahp[e2o - 1] = ynp;
            }
            if (zg0 = (r4[e2o] != yf)) {
                h3[e2o - 1] -= (short)59.794F;
                ww -= o;
                ww += l;
                for (qc = 1; qc < wh; qc++) {
                    switch (e2o + 20) {
                    case 20:
                        p = ahp[qc - 1];
                        ahp[e2o + 1] += (--ahp[wh + 1]);
                        break;
                    case 21:
                        break;
                    case 22:
                        yf >>= (++p);
                    case 23:
                        vpc >>= e2o;
                        break;
                    case 24:
                        ahp[qc + 1] -= (int)h7[e2o];
                        ahp[qc] += (int)le;
                        break;
                    case 25:
                        ro = (short)(-ww);
                        break;
                    case 26:
                        ahp[qc] = hs[wh + 1];
                        break;
                    case 27:
                        c8[e2o - 1] &= (int)(((ro + vpc) - (p + tz)) + zzn);
                        break;
                    case 28:
                        p >>>= (++e[wh + 1]);
                        break;
                    case 29:
                        ww -= (-10261 - i7);
                        break;
                    case 30:
                        vpc = ukc[e2o + 1];
                        break;
                    case 31:
                        eh3 = aj;
                        break;
                    case 32:
                        yf += (int)(mf++);
                        break;
                    case 33:
                        l = (++c8[wh]);
                    case 34:
                        guz *= p;
                        break;
                    case 35:
                        i7 *= hii;
                        break;
                    case 36:
                        ww -= o;
                        break;
                    case 37:
                        usz[(51750 >>> 1) % N] >>>= (int)(h7[wh] + ((ro + j) - (s--)));
                        break;
                    case 38:
                        u = (int)((c % ((--z7) | 1)) * ((-33134 / ((mf + a2) | 1)) + (ptg & i7)));
                        break;
                    case 39:
                        ptg = (int)(o += (long)((++ww) * (wh * -22282)));
                    case 40:
                        vho -= zzn;
                    case 41:
                        ro -= (short)((-(-44423 - (gqd - ptg))) * ((ww - yv) - (-21.204F - nvq)));
                        break;
                    case 42:
                        i7 -= ov8;
                        break;
                    case 43:
                        bt <<= (--vpc);
                        break;
                    case 44:
                        v9 = ((--nvq) - (z[wh - 1] = -3017890352581651980L));
                    case 45:
                        guz >>= (--g);
                        break;
                    case 46:
                        g1q -= w3s;
                        break;
                    case 47:
                        ynp = (byte)s4c;
                    case 48:
                        break;
                    case 49:
                        mwg += (float)le;
                    case 50:
                        w3s -= (int)(guz--);
                        break;
                    case 51:
                        b6l += (--zhl[wh + 1]);
                        break;
                    case 52:
                        w &= (int)(-s);
                        break;
                    case 53:
                        ac1 &= (o = (byi -= (int)(++guz)));
                        break;
                    case 54:
                        jm += ((-(++or)) + ((-7830 * (v5j + mqc)) * (25351 * (-3891745395661220046L + (co--)))));
                        break;
                    case 55:
                        r98 += (int)5585985179545750472L;
                        break;
                    case 56:
                        oyd = ro;
                        break;
                    case 57:
                        ijh ^= u24[e2o];
                        break;
                    case 58:
                        mwg += (o + (-(ov8 * k)));
                    case 59:
                        tk7 = yf;
                        break;
                    case 60:
                        kc >>= rn;
                        break;
                    case 61:
                        a <<= (int)((k--) * s4c);
                        break;
                    case 62:
                        w3s &= (int)((~(long)(le + rc)) >> (z[qc]--));
                    case 63:
                        uhc *= l;
                    case 64:
                        vho >>>= amh;
                        break;
                    case 65:
                        b += x;
                        break;
                    case 66:
                        x *= (++nvq);
                        break;
                    case 67:
                        co = (ptg--);
                        break;
                    case 68:
                        co >>= saf;
                        break;
                    case 69:
                        c8[qc] += ((++m7q) * ((-(or++)) + (m7q--)));
                    case 70:
                        ijh = ((ukc[(-7843 >>> 1) % N]++) - ((eq6 + -862) - mlt));
                        break;
                    case 71:
                        ejm += ym[wh - 1];
                        break;
                    case 72:
                        uhc = (++a2);
                        break;
                    case 73:
                        mf = (long)(4384769337561149035L * (u24[e2o + 1] - (f7u + s)));
                    case 74:
                        s4c += ((guz - (-14755 - vpc)) - ((29978 * (++uh)) + (-8238 - (ro + l9j))));
                        break;
                    case 75:
                        ppv -= yf;
                        break;
                    case 76:
                        le += (((b6l - q9) / ((++a2) | 1)) * (--ptg));
                        break;
                    case 77:
                        udh = ((++kc) + (--m7q));
                        break;
                    case 78:
                        gj[wh + 1] = (int)(((++aq) + (++g)) + ((4286305312159755827L - m[e2o - 1]) + (h4z + le)));
                        break;
                    case 79:
                        h3[wh + 1] = (short)65231;
                        break;
                    case 80:
                        i7 >>= y;
                        break;
                    case 81:
                        t = mqc;
                        break;
                    case 82:
                    case 83:
                        ekc += (int)(((ll * 20186) + -126.999F) + ((--p) + dz));
                        break;
                    case 84:
                        ukc[qc] *= (int)(-685467677511267285L * ((l - mf) - (o - rcs)));
                    case 85:
                        n5 -= (float)(rcs++);
                        break;
                    case 86:
                        x *= (int)(((ejm * h) + (v - dt)) / ((long)((v5j - zzn) - (9120130573915133737L - (aq--))) |
                            1));
                    case 87:
                        if (zg0 = (((b + rcs) + f7u) <= (++z[e2o + 1]))) break;
                    case 88:
                        m7q = (int)((jm = gqd) - ((++l9j) - xz));
                        break;
                    case 89:
                        h3i |= (-20266 * ((rn + ac1) + (34799 + (saf << o))));
                    default:
                        n[e2o - 1] -= (long)(uh - aq);
                    }
                }
            } else if ((ti = (d4t = true)) | (av = yfk)) {
                yfk = ti;
            } else if (zg0 = ((v++) <= mlt)) {
                if ((-(hs[wh + 1]++)) < (n[e2o + 1] * iq[wh - 1])) continue;
            } else {
                ma[e2o] = ((++h3i) - (vpc + (lt * udh)));
            }
        }
    }

    System.out.println("c p wh = " + c + "," + p + "," + wh);
    System.out.println("v uh ov8 = " + Double.doubleToLongBits(v) + "," + uh + "," + ov8);
    System.out.println("l u ro = " + l + "," + u + "," + ro);
    System.out.println("o e2o ynp = " + o + "," + e2o + "," + ynp);
    System.out.println("f7u ww s = " + f7u + "," + Float.floatToIntBits(ww) + "," + Double.doubleToLongBits(s));
    System.out.println("qc yf vpc = " + qc + "," + yf + "," + vpc);
    System.out.println("le tz zzn = " + Double.doubleToLongBits(le) + "," + tz + "," + zzn);
    System.out.println("i7 aj mf = " + i7 + "," + aj + "," + mf);
    System.out.println("guz hii j = " + guz + "," + hii + "," + j);
    System.out.println("z7 a2 ptg = " + z7 + "," + a2 + "," + ptg);
    System.out.println("gqd yv nvq = " + gqd + "," + yv + "," + nvq);
    System.out.println("bt v9 g = " + bt + "," + v9 + "," + g);
    System.out.println("w3s s4c mwg = " + w3s + "," + s4c + "," + Float.floatToIntBits(mwg));
    System.out.println("b6l w ac1 = " + b6l + "," + w + "," + ac1);
    System.out.println("byi jm or = " + byi + "," + jm + "," + or);
    System.out.println("v5j mqc co = " + v5j + "," + mqc + "," + co);
    System.out.println("r98 oyd ijh = " + r98 + "," + oyd + "," + ijh);
    System.out.println("k tk7 kc = " + k + "," + tk7 + "," + kc);
    System.out.println("rn a rc = " + rn + "," + a + "," + rc);
    System.out.println("uhc b x = " + uhc + "," + b + "," + x);
    System.out.println("saf m7q mlt = " + saf + "," + m7q + "," + mlt);
    System.out.println("ejm l9j ppv = " + Double.doubleToLongBits(ejm) + "," + l9j + "," + ppv);
    System.out.println("q9 udh h4z = " + q9 + "," + udh + "," + h4z);
    System.out.println("y t ekc = " + y + "," + t + "," + ekc);
    System.out.println("ll dz rcs = " + ll + "," + dz + "," + Double.doubleToLongBits(rcs));
    System.out.println("n5 h zg0 = " + Float.floatToIntBits(n5) + "," + h + "," + zg0);
    System.out.println("xz h3i yfk = " + Float.floatToIntBits(xz) + "," + h3i + "," + yfk);
    System.out.println("ti d4t av = " + ti + "," + d4t + "," + av);
    System.out.println("me6 z ahp = " + checkSum(me6) + "," + checkSum(z) + "," + checkSum(ahp));
    System.out.println("h7 hs c8 = " + Double.doubleToLongBits(checkSum(h7)) + "," + checkSum(hs) + "," + checkSum(c8));
    System.out.println("e ukc usz = " + checkSum(e) + "," + checkSum(ukc) + "," + checkSum(usz));
    System.out.println("zhl u24 ym = " + checkSum(zhl) + "," + checkSum(u24) + "," + checkSum(ym));
    System.out.println("gj m n = " + checkSum(gj) + "," + checkSum(m) + "," + checkSum(n));
    System.out.println("iq r4 = " + checkSum(iq) + "," + checkSum(r4));
    
    System.out.println("eh3 dt vho = " + eh3 + "," + dt + "," + vho);
    System.out.println("g1q amh eq6 = " + g1q + "," + amh + "," + eq6);
    System.out.println("aq lt h3 = " + Float.floatToIntBits(aq) + "," + lt + "," + checkSum(h3));
    System.out.println("ma = " + Double.doubleToLongBits(checkSum(ma)));
}
}
