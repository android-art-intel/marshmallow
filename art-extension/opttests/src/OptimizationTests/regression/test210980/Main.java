/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.3.001). Sun Jul 13 12:13:13 2014
package OptimizationTests.regression.test210980;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

public static final int N = 300;


public static void main(String[] q) {

    int km=35834, ex=-30234, s=61725, wmi=877, rsb=4186, m=26750, pg=-61384, r52=57589, pi=-36612, yak=-32737,
        w[][]=new int[N][N];
    long c=9123167383233399879L, f=2130572583015931472L, g9z[]=new long[N];
    short cgu=2838, bwq[]=new short[N];
    float hh5=-64.234F, t[]=new float[N];
    double y=96.8;

    init(w, 24290);
    init(g9z, -3709976615886195635L);
    init(bwq, (short)28056);
    init(t, 96.609F);

    km = 227;
    while ( --km > 0 ) {
        w[km][km + 1] = (++ex);
        s = km;
        do {
            ex += (ex - -48402);
        } while ( --s > 0 );
    }
    for (wmi = 12; wmi < 245; ++wmi) {
        c %= (s | 1);
        ex += (ex - (--ex));
        ex *= (int)((-68.974F + (15677 - c)) + y);
        for (rsb = 1; rsb < wmi; rsb++) {
            hh5 = (float)(((ex++) - y) - (ex = (int)(++hh5)));
            hh5 += (((ex++) * (-7589493891870011311L - c)) - ((--ex) - (4050 - (km * c))));
            g9z[rsb + 1] = (-8637408051976771526L - (c - m));
            hh5 -= (ex--);
            try {
                m = (wmi % 248);
                m = (km % 5);
                ex = (s / 83);
            } catch (ArithmeticException a_e) {}
            m *= (int)(c + rsb);
        }
        pg = 286;
        while ( --pg > 0 ) {
            ex = (--m);
        }
        cgu = (short)(--ex);
        r52 &= (bwq[wmi + 1] + cgu);
        pi = wmi;
        while ( --pi > 0 ) {
            r52 += (int)(t[pi - 1]--);
            for (yak = 2; yak < 55; ++yak) {
                ex -= (++ex);
                f = (wmi + (++f));
                hh5 *= (m = ex);
            }
        }
    }

    System.out.println("km ex s = " + km + "," + ex + "," + s);
    System.out.println("wmi c y = " + wmi + "," + c + "," + Double.doubleToLongBits(y));
    System.out.println("rsb hh5 m = " + rsb + "," + Float.floatToIntBits(hh5) + "," + m);
    System.out.println("pg cgu r52 = " + pg + "," + cgu + "," + r52);
    System.out.println("pi yak f = " + pi + "," + yak + "," + f);
    System.out.println("w g9z bwq = " + checkSum(w) + "," + checkSum(g9z) + "," + checkSum(bwq));
    System.out.println("t = " + Double.doubleToLongBits(checkSum(t)));
    
}
}
