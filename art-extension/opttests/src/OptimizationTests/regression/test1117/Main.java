/*
 * Copyright (C) 2015 Intel Corporation
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by Dalvik Fuzzer tool (3.4.001). Thu Oct 23 05:51:53 2014
package OptimizationTests.regression.test1117;

import OptimizationTests.regression.shared.*;

public class Main extends FuzzerUtils {

    public static final int N = 100;

    public static short vr=20802;
    public static double lyo[]=new double[N];

    static {
        init(lyo, 124.792);
    }

    public static long kb_check_sum = 0;
    public static long kb_num = 0;

public static void kb() {

    short ld=-14438;
    boolean o2=false, l[]=new boolean[N];
    long p=6747673806835162481L, c[]=new long[N];
    byte fc=-82;
    float f=-104.934F, rp[]=new float[N];
    int fnr=9546, pz=60548, lmj=-56604, uw2=-10637, hd[]=new int[N];
    double my=95.321;

    init(rp, -90.266F);
    init(c, -3783203143128515457L);
    init(hd, -42939);
    init(l, true);

    for (fnr = 5; fnr < 85; ++fnr) {
        switch (((fnr % 4) * 5) + 107) {
        case 110:
            rp[fnr] += ((fnr - (fnr * fnr)) + (pz--));
            break;
        case 123:
            pz -= (int)((++f) );//+ lyo[fnr + 1]);
            if (o2 = (((--c[fnr - 1]) - pz) < ((fnr * fnr) - (vr - my)))) continue;
            pz = ((-(vr + pz)) + fc);
            for (lmj = fnr; lmj < 38; lmj++) {
                for (uw2 = lmj; uw2 < 8; uw2++) {
                    pz &= (pz++);
                    pz *= (int)(((lmj - p) - (hd[uw2 - 1]++)) * ((p + p) + (my - f)));
                    p >>= ((c[fnr - 1]++) * (++p));
                }
                hd[fnr + 1] |= (int)((ld - (fnr + f)) - ((my * uw2) * (p - fnr)));
            }
            break;
        case 125:
            my = ((uw2 & -4646202876224596390L) + (--ld));
            break;
        case 124:
            o2 = ((l[fnr - 1] = (uw2 != 55933)) != o2);
            break;
        default:
            p *= uw2;
        }
    }
    kb_num++;
    kb_check_sum += fnr + pz + Float.floatToIntBits(f) + (o2 ? 1 : 0) + Double.doubleToLongBits(my) + fc + lmj + uw2 +
        p + ld + Double.doubleToLongBits(checkSum(rp)) + checkSum(c) + checkSum(hd) + checkSum(l);
}

public static void main(String[] o) {

    boolean py=false, f9r[]=new boolean[N];
    byte lqa=56;
    long q=-8059543785210105584L, oys=140331056855457219L, ut[]=new long[N];
    float y3=9.409F, k8s=63.222F;
    int s=15418, d6=34210, fm=54874, t=40839, ofp[]=new int[N];
    double zs=47.277;

    init(ut, -2573757823111673679L);
    init(f9r, false);
    init(ofp, -9796);

    kb();

    for (s = 1; s < 85; s++) {
        zs = (q++);
        try {
            q *= ((d6++) - d6);
            d6 <<= (int)((d6++) / (((--ut[s + 1]) - -17935) | 1));
            if (true && (f9r[s] || (py = (-101.183F < (-(y3 + -16194)))))) break;
            switch ((((s >>> 1) % 3) * 5) + 77) {
            case 80:
                lyo[s] = ((ut[s]++) >> ((--q) * (5344388743545928990L * (33283 + (d6++)))));
                py = (!f9r[s - 1]);
                for (fm = 3; fm < 98; fm += 3) {
                    d6 += (int)((q++) - ((-61074 - (fm * 6.442F)) * (--d6)));
                    ofp[fm + 1] = d6;
                    oys = (++q);
                    d6 += ((long)fm ^ (long)d6);
                    q -= ((--d6) + (++d6));
                    lyo[fm] += ((q -= (long)(-(--y3))) + ((d6 = fm) - (-d6)));
                    q -= (long)((y3 + ut[s]) - -389395348042603955L);
                    for (t = s; t < 96; ++t) {
                        d6 = ofp[d6];
                        d6 -= -36136;
                        py = false;
                        lqa = (byte)5720;
                        oys *= ofp[fm + 1];
                    }
                    d6 += (((fm * k8s) + t) - s);
                }
            case 78:
                k8s = (--d6);
                break;
            case 81:
                d6 -= fm;
            default:
                kb();
            }
        }
        catch (ArrayIndexOutOfBoundsException sg) {
            d6 = t;
        }
    }

    System.out.println("s zs q = " + s + "," + Double.doubleToLongBits(zs) + "," + q);
    System.out.println("d6 py y3 = " + d6 + "," + (py ? 1 : 0) + "," + Float.floatToIntBits(y3));
    System.out.println("fm oys t = " + fm + "," + oys + "," + t);
    System.out.println("lqa k8s ut = " + lqa + "," + Float.floatToIntBits(k8s) + "," + checkSum(ut));
    System.out.println("f9r ofp = " + checkSum(f9r) + "," + checkSum(ofp));

    System.out.println("vr lyo = " + vr + "," + Double.doubleToLongBits(checkSum(lyo)));

    System.out.println("kb_check_sum: " + kb_check_sum);
    System.out.println("kb_num: " + kb_num);
}
}
